"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/swirlds/fcdb/lisp/transforms.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:CATALOGUE- #:G6051 #:G6052 #:G6085 #:G6130 #:G6182 #:G6226 #:TABLE- #:G6270 #:G6271 #:G6272 #:G6273 #:G6310 #:G6355 #:G6407 #:G6451 #:G6503 #:G6548 #:G6599 #:G6644 #:FIELD- #:G6688 #:G6689 #:G6690 #:G6725 #:G6770 #:G6822 #:G6866 #:G6918 #:G6963))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.transforms_tmp1MMGY0Z2"))
(SYSTEM:%IN-PACKAGE "FCDB")
(SYSTEM:COMPILER-DEFSTRUCT 'CATALOGUE :CONC-NAME '#0? :DEFAULT-CONSTRUCTOR 'MAKE-CATALOGUE 
:COPIER 'COPY-CATALOGUE :PREDICATE '"CATALOGUE-P" :DIRECT-SLOTS '(#1=#(#2=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 TABLES 0 CATALOGUE-TABLES #3=NIL #4=T #3# ) #5=#(#2#  VERSIONS 1 CATALOGUE-VERSIONS
 #3#  #4#  #3# )) :SLOTS '(#1#  #5# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION '#3# )
(SYSTEM:FSET 'MAKE-CATALOGUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 0) 18 
'(&KEY ((:TABLES #1?) #1=NIL) ((:VERSIONS #2?) #1# )) #1# )
(SYSTEM:FSET 'CATALOGUE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 18 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) CATALOGUE-TABLES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3))
(SYSTEM:PUT 'CATALOGUE-TABLES 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'CATALOGUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5))
(PROCLAIM '(FTYPE (FUNCTION * T) CATALOGUE-VERSIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 7))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8))
(SYSTEM:PUT 'CATALOGUE-VERSIONS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'CATALOGUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
(SYSTEM::%SET-FDEFINITION 'COPY-CATALOGUE (FUNCTION COPY-STRUCTURE))
(SYSTEM:COMPILER-DEFSTRUCT 'TABLE :CONC-NAME '#7? :DEFAULT-CONSTRUCTOR 'MAKE-TABLE 
:COPIER 'COPY-TABLE :PREDICATE '"TABLE-P" :DIRECT-SLOTS '(#1=#(#2=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 NAME 0 TABLE-NAME #3=NIL #4=T #3# ) #5=#(#2#  FIELDS 1 TABLE-FIELDS #3#  #4#  #3# ) 
#6=#(#2#  KEY 2 TABLE-KEY #3#  #4#  #3# ) #7=#(#2#  KEYS 3 TABLE-KEYS #3#  #4#  #3# )) 
:SLOTS '(#1#  #5#  #6#  #7# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION '#3# )
(SYSTEM:FSET 'MAKE-TABLE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 12) 131 
'(&KEY ((:NAME #8?) #1=NIL) ((:FIELDS #9?) #1# ) ((:KEY #10?) #1# ) ((:KEYS #11?) 
#1# )) #1# )
(SYSTEM:FSET 'TABLE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13) 131 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) TABLE-NAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 14))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 15))
(SYSTEM:PUT 'TABLE-NAME 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 'TABLE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 17))
(PROCLAIM '(FTYPE (FUNCTION * T) TABLE-FIELDS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 19))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 20))
(SYSTEM:PUT 'TABLE-FIELDS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 
'TABLE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 22))
(PROCLAIM '(FTYPE (FUNCTION * T) TABLE-KEY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 24))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 25))
(SYSTEM:PUT 'TABLE-KEY 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 2 'TABLE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 27))
(PROCLAIM '(FTYPE (FUNCTION * T) TABLE-KEYS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 29))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 30))
(SYSTEM:PUT 'TABLE-KEYS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 3 'TABLE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 32))
(SYSTEM::%SET-FDEFINITION 'COPY-TABLE (FUNCTION COPY-STRUCTURE))
(SYSTEM:COMPILER-DEFSTRUCT 'FIELD :CONC-NAME '#20? :DEFAULT-CONSTRUCTOR 'MAKE-FIELD 
:COPIER 'COPY-FIELD :PREDICATE '"FIELD-P" :DIRECT-SLOTS '(#1=#(#2=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 NAME 0 FIELD-NAME #3=NIL #4=T #3# ) #5=#(#2#  TYPE 1 FIELD-TYPE #3#  #4#  #3# ) 
#6=#(#2#  QUOTED 2 FIELD-QUOTED #3#  #4#  #3# )) :SLOTS '(#1#  #5#  #6# ) :INHERITED-ACCESSORS 
'#3#  :DOCUMENTATION '#3# )
(SYSTEM:FSET 'MAKE-FIELD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 34) 170 
'(&KEY ((:NAME #21?) #1=NIL) ((:TYPE #22?) #1# ) ((:QUOTED #23?) #1# )) #1# )
(SYSTEM:FSET 'FIELD-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 35) 170 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) FIELD-NAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 36))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 37))
(SYSTEM:PUT 'FIELD-NAME 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 'FIELD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 39))
(PROCLAIM '(FTYPE (FUNCTION * T) FIELD-TYPE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 41))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 42))
(SYSTEM:PUT 'FIELD-TYPE 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 'FIELD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 44))
(PROCLAIM '(FTYPE (FUNCTION * T) FIELD-QUOTED))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 46))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 47))
(SYSTEM:PUT 'FIELD-QUOTED 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 2 
'FIELD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 49))
(SYSTEM::%SET-FDEFINITION 'COPY-FIELD (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET 'CAT-TABLE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 51) 236 '(CAT 
TAB) #1=NIL)
(SYSTEM:FSET 'FIELD-NAMES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 52) 678 
'(CAT TAB) #1=NIL)
(SYSTEM:FSET 'CAT-TABLE-NAMES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 53) 
767 '(CAT) #1=NIL)
(SYSTEM:FSET 'TABLE-KEY-COLS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54) 
844 '(TAB) #1=NIL)
(SYSTEM:FSET 'TABLE-ALL-KEYS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 55) 
1002 '(TAB) #1=NIL)
(SYSTEM:FSET 'TABLE-UNIQUE-KEYS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 56) 
1068 '(TAB) #1=NIL)
(SYSTEM:FSET 'TABLE-PRIMARY-KEYS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
57) 1126 '(TAB) #1=NIL)
(SYSTEM:FSET 'TABLE-RENAMED (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 58) 1228 
'(TAB TABLE-NAME-MAP FIELD-NAME-MAP) "TAB is a TABLE structure.
  This function returns an equivalent structure, but with table and field names
  replaced by those returned by the TABLE-NAME-MAP and FIELD-NAME-MAP fn args.")
(SYSTEM:FSET 'BRANCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 60) 2073 '(NODE 
TREE) #1=NIL)
(SYSTEM:FSET 'BRANCH2-ORIG (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 61) 2398 
'(NODE TREE) #1=NIL)
(SYSTEM:FSET 'BRANCH2 (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 62) 2668 '(NODE 
TREE) #1=NIL)
(SYSTEM:FSET 'BRANCH-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 63) 2791 
'#1=NIL #1# )
(SYSTEM:FSET 'BRANCH2-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 64) 2952 
'#1=NIL #1# )
(SYSTEM:FSET 'LEAVES-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 65) 3063 
'#1=NIL #1# )
(SYSTEM:FSET 'LEAVES-ORIG (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 66) 3257 
'(TREE) #1=NIL)
(SYSTEM:FSET 'LEAVES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 67) 3545 '(VERSIONS) 
#1=NIL)
(SYSTEM:FSET 'INTERIOR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 68) 3916 '(LEAVES 
VERSION-TREE) "branch versions except leaves")
(SYSTEM:FSET 'ANY-LEAF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 70) 4101 '(VERSIONS) 
#1=NIL)
(SYSTEM:FSET 'CLOSEST-LEAF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 71) 4323 
'(V VERSIONS) #1=NIL)
(SYSTEM:FSET 'CLOSEST-OFFSHOOT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 72) 
4401 '(V VERSIONS) "Answer a subtree (or NIL) that shares the most of V's ancestry.")
(SYSTEM:FSET 'OFFSHOOTS1 (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 73) 4608 
'(NODE CHILD) "Returns a list of subtrees of NODE whose root is not CHILD.")
(SYSTEM:FSET 'CLOSEST-LEAF-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 75) 
4882 '#1=NIL #1# )
(SYSTEM:FSET 'OFFSHOOTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 76) 4992 
'(LEAF VERSIONS) "Returns a list of #'OFFSHOOTS1. So some elts may be NIL.
  The first elt is closest to LEAF.
  Our tree happens to be binary, so we should take the CARs of each elt.")
(SYSTEM:FSET 'TREE-PARTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 77) 5296 
'(LEAF VERSIONS) "Returns a triple:
    a) list of (reversed) branches to proper offshoots, closest first
    b) the twig from below the lowest common ancestor to LEAF
    c) branch from root to that ancestor")
(SYSTEM:FSET 'TREE-PARTS-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 80) 
6173 '#1=NIL #1# )
(SYSTEM:FSET 'V-CREATE-TABLE-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
81) 6280 '#1=NIL #1# )
(SYSTEM:FSET 'V-CREATE-TABLE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 82) 
6759 '(NAME FIELDS KEY) #1=NIL)
(DEFPARAMETER *INTERNAL-SQL-OPERATORS* '(EXCEPT AND = < OR |.| <=))
(SYSTEM:FSET 'BRANCH-PREDICATE-UNOPT-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
83) 7097 '#1=NIL #1# )
(SYSTEM:FSET 'BRANCH-PREDICATE-UNOPT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
84) 7221 '(V VERSIONS) #1=NIL)
(SYSTEM:FSET 'BRANCH-PREDICATE-OPT-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
86) 7368 '#1=NIL #1# )
(SYSTEM:FSET 'BRANCH-PREDICATE-OPT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
87) 7704 '(V VERSIONS) #1=NIL)
(SYSTEM:FSET 'BRANCH-PREDICATE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 88) 
7812 '(&REST ARGS) #1=NIL)
(SYSTEM:FSET 'BRANCH-PREDICATE2 (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 89) 
7930 '(V CAT) #1=NIL)
(SYSTEM:FSET 'BRANCH-SELECT-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
90) 8013 '#1=NIL #1# )
(SYSTEM:FSET 'BRANCH-SELECT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 91) 8152 
'(NAME VERSION VERSIONS) #1=NIL)
(SYSTEM:FSET 'V-TABLE-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 92) 8267 
'#1=NIL #1# )
(SYSTEM:FSET 'BRANCH-SHADOW (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 93) 8865 
'(A-BRANCH-SELECT KEY) #1=NIL)
(SYSTEM:FSET 'V-TABLE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 95) 9177 '(A-BRANCH-SELECT 
KEY) #1=NIL)
(SYSTEM:FSET 'V-TABLE1 (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 96) 9404 '(TABLE 
CAT VERSION) #1=NIL)
(SYSTEM:FSET 'V-TABLE2 (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 97) 9554 '(TABLE 
ALIAS CAT VERSION) #1=NIL)
(SYSTEM:FSET 'V-SELECT-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 98) 9642 
'#1=NIL #1# )
(SYSTEM:FSET 'V-SELECT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 99) 10195 
'(CAT VERSION FIELDS ALIASED-TABLES WHERE) #1=NIL)
(SYSTEM:FSET 'V-INSERT-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 100) 
10413 '#1=NIL #1# )
(SYSTEM:FSET 'V-INSERT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 101) 10574 
'(TABLE FIELDS VALS VERSION) #1=NIL)
(DEFVAR *TEST-CAT* (MAKE-CATALOGUE :TABLES (LIST (MAKE-TABLE #1=:NAME 'TABLE1 :KEY 
'(#2=ID) :FIELDS (MAPCAR (CURRY (FUNCTION MAKE-FIELD) #1# ) '(#2#  A B C D)))) :VERSIONS 
'(1 2 3)))
(DEFVAR *TEST-CAT2* (MAKE-CATALOGUE :TABLES (CATALOGUE-TABLES *TEST-CAT*) :VERSIONS 
'(1 2 3 4)))
(SYSTEM:FSET 'V-UPDATE-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 102) 
11546 '#1=NIL #1# )
(SYSTEM:FSET 'SELECT-COW (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 103) 12040 
'(CAT VERSION TABLE WHERE) #1=NIL)
(SYSTEM:FSET 'COW (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 104) 12289 '(CAT 
TABLE WHERE TARGET-VERSIONS) #1=NIL)
(SYSTEM:FSET 'V-UPDATE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 106) 12555 
'(CAT VERSION TABLE ASSIGNMENTS WHERE) #1=NIL)
(SYSTEM:FSET 'V-DELETE-TEST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 107) 
12730 '#1=NIL #1# )
(SYSTEM:FSET 'LEAVES-BESIDES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 108) 
13482 '(VERSION CAT) #1=NIL)
(SYSTEM:FSET 'V-DELETE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 109) 13573 
'(CAT VERSION TABLE WHERE) #1=NIL)
