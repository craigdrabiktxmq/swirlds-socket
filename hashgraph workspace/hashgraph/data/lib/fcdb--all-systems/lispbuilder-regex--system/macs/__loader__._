"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/local-projects/lispbuilder-regex/macs.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:G6095 #:G6096 #:G6141 #:G6142 #:ACCESS-FORM-6182 #:ENVIRONMENT-6183 #:ARGS-6181 #:ACCESS-FORM-6234 #:ENVIRONMENT-6235 #:ARGS-6233 #:RE-SCANNER- #:G6306 #:G6307 #:G6308 #:G6309 #:G6310 #:G6311 #:G6312 #:G6356 #:G6402 #:G6454 #:G6499 #:G6551 #:G6597 #:G6648 #:G6694 #:G6746 #:G6792 #:G6844 #:G6889 #:G6941 #:G6986 #:CLOSURE-INFO- #:G7030 #:G7031 #:G7032 #:G7067 #:G7112 #:G7164 #:G7208 #:G7260 #:G7305 #:MATCHER- #:G7378 #:G7379 #:G7380 #:G7381 #:G7382 #:G7383 #:G7424 #:G7469 #:G7521 #:G7565 #:G7617 #:G7662 #:G7713 #:G7758 #:G7810 #:G7855 #:G7907 #:G7952))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.macs_tmpXKR57X1B"))
(SYSTEM:%IN-PACKAGE "LISPBUILDER-REGEX")
(DEFVAR *REGEX-COMPILE-VERBOSE* #1=NIL)
(SYSTEM:FSET 'COMPILE-VERBOSE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 0) 
330 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *MATCH-SIMPLE-STRINGS-ONLY* T)
(SYSTEM:FSET 'MATCH-SIMPLE-STRINGS-ONLY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1) 453 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *FORCE-SAFE-MATCH* T)
(SYSTEM:FSET 'FORCE-SAFE-MATCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2) 
639 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *ESCAPE-SPECIAL-CHARS* #1=NIL)
(SYSTEM:FSET 'ESCAPE-SPECIAL-CHARS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
3) 779 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *DOT-MATCHES-NEWLINE* #1=NIL)
(SYSTEM:FSET 'DOT-MATCHES-NEWLINE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
4) 926 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *ALLOW-BACKMATCH* T)
(SYSTEM:FSET 'ALLOW-BACKMATCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5) 
1041 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *ALLOW-RANGEMATCH* T)
(SYSTEM:FSET 'ALLOW-RANGEMATCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 6) 
1173 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *ALLOW-NONGREEDY-QUANTIFIERS* T)
(SYSTEM:FSET 'ALLOW-NONGREEDY-QUANTIFIERS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
7) 1318 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *ALLOW-NONREGISTER-GROUPS* T)
(SYSTEM:FSET 'ALLOW-NONREGISTER-GROUPS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
8) 1482 '(&OPTIONAL (FLAG T)) #1=NIL)
(DEFVAR *REGISTERS-MATCH-RIGHTMOST* #1=NIL)
(SYSTEM:FSET 'REGISTERS-MATCH-RIGHTMOST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
9) 1643 '(&OPTIONAL (FLAG T)) #1=NIL)
(PROCLAIM '(INLINE MAKE-CHAR-NODE CHAR-NODE-P CHAR-NODE-CHAR))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-CHAR-NODE) '(LAMBDA (#2=CHR) (BLOCK #1#  
#2# )))
(SYSTEM:FSET 'MAKE-CHAR-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10) 
1878 '(CHR) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CHAR-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  (CHARACTERP 
#2# ))))
(SYSTEM:FSET 'CHAR-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 11) 1913 
'(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CHAR-NODE-CHAR) '(LAMBDA (#2=CHAR-NODE) (BLOCK 
#1#  #2# )))
(SYSTEM:FSET 'CHAR-NODE-CHAR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 12) 
1960 '(CHAR-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-STRING-NODE STRING-NODE-P STRING-NODE-STRING))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-STRING-NODE) '(LAMBDA (#2=STR) (BLOCK #1#  
#2# )))
(SYSTEM:FSET 'MAKE-STRING-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13) 
2092 '(STR) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=STRING-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(STRINGP #2# ))))
(SYSTEM:FSET 'STRING-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 14) 2129 
'(NODE) #1=NIL)
(SYSTEM:FSET 'TEXT-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 15) 2175 
'(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=STRING-NODE-STRING) '(LAMBDA (#2=STRING-NODE) 
(BLOCK #1#  #2# )))
(SYSTEM:FSET 'STRING-NODE-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
16) 2249 '(STRING-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-STARTWORD-NODE STARTWORD-NODE-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-STARTWORD-NODE) '(LAMBDA #2=NIL (BLOCK #1#  
'(STARTWORD))))
(SYSTEM:FSET 'MAKE-STARTWORD-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
17) 2375 '#1=NIL #1# )
(SETF (SYSTEM:INLINE-EXPANSION '#1=STARTWORD-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(EQUALP #2#  '(STARTWORD)))))
(SYSTEM:FSET 'STARTWORD-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 18) 
2421 '(NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-ENDWORD-NODE ENDWORD-NODE-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-ENDWORD-NODE) '(LAMBDA #2=NIL (BLOCK #1#  
'(ENDWORD))))
(SYSTEM:FSET 'MAKE-ENDWORD-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 19) 
2549 '#1=NIL #1# )
(SETF (SYSTEM:INLINE-EXPANSION '#1=ENDWORD-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(EQUALP #2#  '(ENDWORD)))))
(SYSTEM:FSET 'ENDWORD-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 20) 
2591 '(NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-CLASSSEQ-NODE CLASSSEQ-NODE-P CLASSSEQ-NODE-SEQ))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-CLASSSEQ-NODE) '(LAMBDA (#2=SEQ) (BLOCK #1#  
(SYSTEM::BACKQ-LIST 'CLASSSEQ #2# ))))
(SYSTEM:FSET 'MAKE-CLASSSEQ-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
21) 2768 '(SEQ) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CLASSSEQ-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'CLASSSEQ)))))
(SYSTEM:FSET 'CLASSSEQ-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 22) 
2820 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CLASSSEQ-NODE-SEQ) '(LAMBDA (#2=CLASSSEQ-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'CLASSSEQ-NODE-SEQ (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 23) 
2900 '(CLASSSEQ-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-BACKMATCH-NODE BACKMATCH-NODE-P BACKMATCH-NODE-REGNUM))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-BACKMATCH-NODE) '(LAMBDA (#2=REGNUM) (BLOCK 
#1#  (SYSTEM::BACKQ-LIST 'BACKMATCH #2# ))))
(SYSTEM:FSET 'MAKE-BACKMATCH-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
24) 3093 '(REGNUM) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=BACKMATCH-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'BACKMATCH)))))
(SYSTEM:FSET 'BACKMATCH-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 25) 
3153 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=BACKMATCH-NODE-REGNUM) '(LAMBDA (#2=BACKMATCH-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'BACKMATCH-NODE-REGNUM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
26) 3235 '(BACKMATCH-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-SEQ-NODE-LIST MAKE-SEQ-NODE-ARGS SEQ-NODE-P SEQ-NODE-CHILDREN 
SEQ-NODE-NUMCHILDREN SEQ-NODE-CHILD))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-SEQ-NODE-LIST) '(LAMBDA (#2=CHILD-NODES) 
(BLOCK #1#  (LET ((#3=NUMCHILDREN (LENGTH #2# ))) (COND ((ZEROP #3# ) #4=NIL) ((= 
#3#  1) (FIRST #2# )) (T (SYSTEM::BACKQ-CONS 'SEQ #2# )))))))
(SYSTEM:FSET 'MAKE-SEQ-NODE-LIST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
27) 3539 '(CHILD-NODES) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION 'MAKE-SEQ-NODE-ARGS) '#1=NIL)
(SYSTEM:FSET 'MAKE-SEQ-NODE-ARGS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
28) 3747 '(&REST CHILD-NODES) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=SEQ-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  (AND 
(LISTP #2# ) (EQ (FIRST #2# ) 'SEQ)))))
(SYSTEM:FSET 'SEQ-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 29) 3829 
'(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=SEQ-NODE-CHILDREN) '(LAMBDA (#2=SEQ-NODE) (BLOCK 
#1#  (REST #2# ))))
(SYSTEM:FSET 'SEQ-NODE-CHILDREN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 30) 
3899 '(SEQ-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=SEQ-NODE-NUMCHILDREN) '(LAMBDA (#2=SEQ-NODE) (BLOCK 
#1#  (LENGTH (SEQ-NODE-CHILDREN #2# )))))
(SYSTEM:FSET 'SEQ-NODE-NUMCHILDREN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
31) 3954 '(SEQ-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=SEQ-NODE-CHILD) '(LAMBDA (#2=SEQ-NODE #3=IDX) 
(BLOCK #1#  (ELT (SEQ-NODE-CHILDREN #2# ) #3# ))))
(SYSTEM:FSET 'SEQ-NODE-CHILD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 32) 
4034 '(SEQ-NODE IDX) #1=NIL)
(PROCLAIM '(INLINE MAKE-KLEENE-NODE KLEENE-NODE-GREEDY-P KLEENE-NODE-NONGREEDY-P 
KLEENE-NODE-CHILD))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-KLEENE-NODE) '(LAMBDA (#2=CHILD-NODE #3=GREEDYP) 
(BLOCK #1#  (COND (#3#  (#4=SYSTEM::BACKQ-LIST '* #2# )) (T (#4#  '*? #2# ))))))
(SYSTEM:FSET 'MAKE-KLEENE-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 33) 
4290 '(CHILD-NODE GREEDYP) #1=NIL)
(SYSTEM:FSET 'KLEENE-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 34) 4411 
'(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=KLEENE-NODE-GREEDY-P) '(LAMBDA (#2=NODE) (BLOCK 
#1#  (EQ (FIRST #2# ) '*))))
(SYSTEM:FSET 'KLEENE-NODE-GREEDY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
35) 4545 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=KLEENE-NODE-NONGREEDY-P) '(LAMBDA (#2=NODE) (BLOCK 
#1#  (EQ (FIRST #2# ) '*?))))
(SYSTEM:FSET 'KLEENE-NODE-NONGREEDY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
36) 4604 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=KLEENE-NODE-CHILD) '(LAMBDA (#2=KLEENE-NODE) (BLOCK 
#1#  (SECOND #2# ))))
(SYSTEM:FSET 'KLEENE-NODE-CHILD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 37) 
4667 '(KLEENE-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-PKLEENE-NODE PKLEENE-NODE-GREEDY-P PKLEENE-NODE-NONGREEDY-P 
PKLEENE-NODE-CHILD))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-PKLEENE-NODE) '(LAMBDA (#2=CHILD-NODE #3=GREEDYP) 
(BLOCK #1#  (COND (#3#  (#4=SYSTEM::BACKQ-LIST '+ #2# )) (T (#4#  '+? #2# ))))))
(SYSTEM:FSET 'MAKE-PKLEENE-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 38) 
4942 '(CHILD-NODE GREEDYP) #1=NIL)
(SYSTEM:FSET 'PKLEENE-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 39) 
5064 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=PKLEENE-NODE-GREEDY-P) '(LAMBDA (#2=NODE) (BLOCK 
#1#  (EQ (FIRST #2# ) '+))))
(SYSTEM:FSET 'PKLEENE-NODE-GREEDY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
40) 5199 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=PKLEENE-NODE-NONGREEDY-P) '(LAMBDA (#2=NODE) (BLOCK 
#1#  (EQ (FIRST #2# ) '+?))))
(SYSTEM:FSET 'PKLEENE-NODE-NONGREEDY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
41) 5259 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=PKLEENE-NODE-CHILD) '(LAMBDA (#2=PKLEENE-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'PKLEENE-NODE-CHILD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
42) 5323 '(PKLEENE-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-OPTIONAL-NODE OPTIONAL-NODE-P OPTIONAL-NODE-GREEDY-P OPTIONAL-NODE-NONGREEDY-P 
OPTIONAL-CHILD-NODE))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-OPTIONAL-NODE) '(LAMBDA (#2=CHILD-NODE #3=GREEDYP) 
(BLOCK #1#  (COND (#3#  (#4=SYSTEM::BACKQ-LIST '? #2# )) (T (#4#  '?? #2# ))))))
(SYSTEM:FSET 'MAKE-OPTIONAL-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
43) 5652 '(CHILD-NODE GREEDYP) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=OPTIONAL-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(COND ((NOT (LISTP #2# )) #3=NIL) ((#4=EQ (#5=FIRST #2# ) '?) #6=T) ((#4#  (#5#  
#2# ) '??) #6# ) (#6#  #3# )))))
(SYSTEM:FSET 'OPTIONAL-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 44) 
5775 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=OPTIONAL-NODE-GREEDY-P) '(LAMBDA (#2=NODE) (BLOCK 
#1#  (EQ (FIRST #2# ) '?))))
(SYSTEM:FSET 'OPTIONAL-NODE-GREEDY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
45) 5911 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=OPTIONAL-NODE-NONGREEDY-P) '(LAMBDA (#2=NODE) 
(BLOCK #1#  (EQ (FIRST #2# ) '??))))
(SYSTEM:FSET 'OPTIONAL-NODE-NONGREEDY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
46) 5972 '(NODE) #1=NIL)
(SYSTEM:FSET 'OPTIONAL-NODE-CHILD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
47) 6037 '(OPTIONAL-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-RANGE-NODE RANGE-NODE-GREEDY-P RANGE-NODE-NONGREEDY-P RANGE-NODE-MIN 
RANGE-NODE-MAX RANGE-NODE-CHILD))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-RANGE-NODE) '(LAMBDA (#2=CHILD-NODE #3=MIN 
#4=MAX #5=GREEDYP) (BLOCK #1#  (#6=UNLESS (#7=NUMBERP #3# ) (#8=SETQ #3#  0)) (#6#  
(#7#  #4# ) (#8#  #4#  #9=NIL)) (LET ((#3#  (#10=IF (#11=AND (#7#  #3# ) (#7#  #4# )) 
(#3#  #3#  #4# ) #3# )) (#4#  (#10#  (#11#  (#7#  #3# ) (#7#  #4# )) (#4#  #3#  #4# ) 
#4# ))) (COND (#5#  (#12=SYSTEM::BACKQ-LIST 'RANGE (#13=SYSTEM::BACKQ-CONS #3#  #4# ) 
#2# )) (T (#12#  'NGRANGE (#13#  #3#  #4# ) #2# )))))))
(SYSTEM:FSET 'MAKE-RANGE-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 48) 
6402 '(CHILD-NODE MIN MAX GREEDYP) #1=NIL)
(SYSTEM:FSET 'RANGE-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 49) 6859 
'(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=RANGE-NODE-GREEDY-P) '(LAMBDA (#2=NODE) (BLOCK 
#1#  (EQ (FIRST #2# ) 'RANGE))))
(SYSTEM:FSET 'RANGE-NODE-GREEDY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
50) 7001 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=RANGE-NODE-NONGREEDY-P) '(LAMBDA (#2=NODE) (BLOCK 
#1#  (EQ (FIRST #2# ) 'NGRANGE))))
(SYSTEM:FSET 'RANGE-NODE-NONGREEDY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
51) 7063 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=RANGE-NODE-MIN) '(LAMBDA (#2=RANGE-NODE) (BLOCK 
#1#  (CAR (SECOND #2# )))))
(SYSTEM:FSET 'RANGE-NODE-MIN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 52) 
7130 '(RANGE-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=RANGE-NODE-MAX) '(LAMBDA (#2=RANGE-NODE) (BLOCK 
#1#  (CDR (SECOND #2# )))))
(SYSTEM:FSET 'RANGE-NODE-MAX (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 53) 
7194 '(RANGE-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=RANGE-NODE-CHILD) '(LAMBDA (#2=RANGE-NODE) (BLOCK 
#1#  (THIRD #2# ))))
(SYSTEM:FSET 'RANGE-NODE-CHILD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54) 
7258 '(RANGE-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-ALT-NODE-LIST MAKE-ALT-NODE-ARGS ALT-NODE-P ALT-NODE-CHILDREN 
ALT-NODE-NUMCHILDREN ALT-NODE-FIRST ALT-NODE-SECOND ALT-NODE-CHILD))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-ALT-NODE-LIST) '(LAMBDA (#2=CHILD-NODES) 
(BLOCK #1#  (SYSTEM::BACKQ-CONS 'ALT #2# ))))
(SYSTEM:FSET 'MAKE-ALT-NODE-LIST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
55) 7672 '(CHILD-NODES) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION 'MAKE-ALT-NODE-ARGS) '#1=NIL)
(SYSTEM:FSET 'MAKE-ALT-NODE-ARGS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
56) 7736 '(&REST CHILD-NODES) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ALT-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  (AND 
(LISTP #2# ) (EQ (FIRST #2# ) 'ALT)))))
(SYSTEM:FSET 'ALT-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 57) 7806 
'(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ALT-NODE-CHILDREN) '(LAMBDA (#2=ALT-NODE) (BLOCK 
#1#  (REST #2# ))))
(SYSTEM:FSET 'ALT-NODE-CHILDREN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 58) 
7876 '(ALT-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ALT-NODE-NUMCHILDREN) '(LAMBDA (#2=ALT-NODE) (BLOCK 
#1#  (LENGTH (ALT-NODE-CHILDREN #2# )))))
(SYSTEM:FSET 'ALT-NODE-NUMCHILDREN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
59) 7931 '(ALT-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ALT-NODE-FIRST) '(LAMBDA (#2=ALT-NODE) (BLOCK 
#1#  (FIRST (ALT-NODE-CHILDREN #2# )))))
(SYSTEM:FSET 'ALT-NODE-FIRST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 60) 
8011 '(ALT-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ALT-NODE-SECOND) '(LAMBDA (#2=ALT-NODE) (BLOCK 
#1#  (SECOND (ALT-NODE-CHILDREN #2# )))))
(SYSTEM:FSET 'ALT-NODE-SECOND (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 61) 
8084 '(ALT-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ALT-NODE-CHILD) '(LAMBDA (#2=ALT-NODE #3=IDX) 
(BLOCK #1#  (ELT (ALT-NODE-CHILDREN #2# ) #3# ))))
(SYSTEM:FSET 'ALT-NODE-CHILD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 62) 
8159 '(ALT-NODE IDX) #1=NIL)
(PROCLAIM '(INLINE MAKE-CASEALT-NODE-LIST MAKE-CASEALT-NODE-ARGS CASEALT-NODE-P CASEALT-NODE-CHILDREN 
CASEALT-NODE-NUMCHILDREN))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-CASEALT-NODE-LIST) '(LAMBDA (#2=CHILD-NODES) 
(BLOCK #1#  (SYSTEM::BACKQ-LIST 'CASEALT #2# ))))
(SYSTEM:FSET 'MAKE-CASEALT-NODE-LIST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
63) 8505 '(CHILD-NODES) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION 'MAKE-CASEALT-NODE-ARGS) '#1=NIL)
(SYSTEM:FSET 'MAKE-CASEALT-NODE-ARGS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
64) 8576 '(&REST CHILD-NODES) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CASEALT-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'CASEALT)))))
(SYSTEM:FSET 'CASEALT-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 65) 
8653 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CASEALT-NODE-CHILDREN) '(LAMBDA (#2=CASEALT-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'CASEALT-NODE-CHILDREN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
66) 8731 '(CASEALT-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CASEALT-NODE-NUMCHILDREN) '(LAMBDA (#2=CASEALT-NODE) 
(BLOCK #1#  (LENGTH (CASEALT-NODE-CHILDREN #2# )))))
(SYSTEM:FSET 'CASEALT-NODE-NUMCHILDREN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
67) 8800 '(CASEALT-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-REGISTER-NODE REGISTER-NODE-P REGISTER-NODE-REGNUM REGISTER-NODE-CHILD))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-REGISTER-NODE) '(LAMBDA (#2=REGNUM #3=CHILD) 
(BLOCK #1#  (SYSTEM::BACKQ-LIST 'REG #2#  #3# ))))
(SYSTEM:FSET 'MAKE-REGISTER-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
68) 9039 '(REGNUM CHILD) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGISTER-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'REG)))))
(SYSTEM:FSET 'REGISTER-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 69) 
9105 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGISTER-NODE-REGNUM) '(LAMBDA (#2=REG-NODE) (BLOCK 
#1#  (SECOND #2# ))))
(SYSTEM:FSET 'REGISTER-NODE-REGNUM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
70) 9180 '(REG-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGISTER-NODE-CHILD) '(LAMBDA (#2=REG-NODE) (BLOCK 
#1#  (THIRD #2# ))))
(SYSTEM:FSET 'REGISTER-NODE-CHILD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
71) 9240 '(REG-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-REGSTART-NODE REGSTART-NODE-P REGSTART-NODE-REGNUM))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-REGSTART-NODE) '(LAMBDA (#2=REGNUM) (BLOCK 
#1#  (SYSTEM::BACKQ-LIST 'REGSTART #2# ))))
(SYSTEM:FSET 'MAKE-REGSTART-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
72) 9451 '(REGNUM) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGSTART-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'REGSTART)))))
(SYSTEM:FSET 'REGSTART-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 73) 
9509 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGSTART-NODE-REGNUM) '(LAMBDA (#2=RSTART-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'REGSTART-NODE-REGNUM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
74) 9589 '(RSTART-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-REGEND-NODE REGEND-NODE-P REGEND-NODE-REGNUM))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-REGEND-NODE) '(LAMBDA (#2=REGNUM) (BLOCK 
#1#  (SYSTEM::BACKQ-LIST 'REGEND #2# ))))
(SYSTEM:FSET 'MAKE-REGEND-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 75) 
9802 '(REGNUM) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGEND-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'REGEND)))))
(SYSTEM:FSET 'REGEND-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 76) 9856 
'(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGEND-NODE-REGNUM) '(LAMBDA (#2=REND-NODE) (BLOCK 
#1#  (SECOND #2# ))))
(SYSTEM:FSET 'REGEND-NODE-REGNUM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
77) 9932 '(REND-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-LOOKAHEAD-NODE LOOKAHEAD-NODE-P LOOKAHEAD-NODE-EXPR))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-LOOKAHEAD-NODE) '(LAMBDA (#2=EXPR) (BLOCK 
#1#  (SYSTEM::BACKQ-LIST 'LOOKAHEAD #2# ))))
(SYSTEM:FSET 'MAKE-LOOKAHEAD-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
78) 10148 '(EXPR) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=LOOKAHEAD-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'LOOKAHEAD)))))
(SYSTEM:FSET 'LOOKAHEAD-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 79) 
10204 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=LOOKAHEAD-NODE-EXPR) '(LAMBDA (#2=LOOKAHEAD-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'LOOKAHEAD-NODE-EXPR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
80) 10286 '(LOOKAHEAD-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-NLOOKAHEAD-NODE NLOOKAHEAD-NODE-P NLOOKAHEAD-NODE-EXPR))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-NLOOKAHEAD-NODE) '(LAMBDA (#2=EXPR) (BLOCK 
#1#  (SYSTEM::BACKQ-LIST 'NLOOKAHEAD #2# ))))
(SYSTEM:FSET 'MAKE-NLOOKAHEAD-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
81) 10514 '(EXPR) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=NLOOKAHEAD-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'NLOOKAHEAD)))))
(SYSTEM:FSET 'NLOOKAHEAD-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 82) 
10572 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=NLOOKAHEAD-NODE-EXPR) '(LAMBDA (#2=NLOOKAHEAD-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'NLOOKAHEAD-NODE-EXPR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
83) 10656 '(NLOOKAHEAD-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-CHARCLASS-NODE CHARCLASS-NODE-NEGATED-P CHARCLASS-NODE-CHARS))
(SETF (SYSTEM:INLINE-EXPANSION 'MAKE-CHARCLASS-NODE) '#1=NIL)
(SYSTEM:FSET 'MAKE-CHARCLASS-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
84) 10896 '(CHARS &KEY NEGATED) #1=NIL)
(SYSTEM:FSET 'POSITIVE-CHARCLASS-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
85) 11096 '(NODE) #1=NIL)
(SYSTEM:FSET 'CHARCLASS-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 86) 
11187 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CHARCLASS-NODE-NEGATED-P) '(LAMBDA (#2=CHARCLASS-NODE) 
(BLOCK #1#  (EQ (FIRST #2# ) 'NCHARCLASS))))
(SYSTEM:FSET 'CHARCLASS-NODE-NEGATED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
87) 11340 '(CHARCLASS-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=CHARCLASS-NODE-CHARS) '(LAMBDA (#2=CHARCLASS-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'CHARCLASS-NODE-CHARS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
88) 11432 '(CHARCLASS-NODE) #1=NIL)
(SYSTEM:FSET 'CHAR-OR-CLASS-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
89) 11504 '(NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-SPECCLASS-NODE SPECCLASS-NODE-NEGATED-P SPECCLASS-NODE-CLASS))
(SETF (SYSTEM:INLINE-EXPANSION 'MAKE-SPECCLASS-NODE) '#1=NIL)
(SYSTEM:FSET 'MAKE-SPECCLASS-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
90) 11753 '(CLASS &KEY NEGATED) #1=NIL)
(SYSTEM:FSET 'SPECCLASS-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 91) 
11883 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=SPECCLASS-NODE-NEGATED-P) '(LAMBDA (#2=SPECCLASS-NODE) 
(BLOCK #1#  (EQ (FIRST #2# ) 'NSPECCLASS))))
(SYSTEM:FSET 'SPECCLASS-NODE-NEGATED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
92) 12036 '(SPECCLASS-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=SPECCLASS-NODE-CLASS) '(LAMBDA (#2=SPECCLASS-NODE) 
(BLOCK #1#  (SECOND #2# ))))
(SYSTEM:FSET 'SPECCLASS-NODE-CLASS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
93) 12128 '(SPECCLASS-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-START-ANCHOR-NODE START-ANCHOR-NODE-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-START-ANCHOR-NODE) '(LAMBDA #2=NIL (BLOCK 
#1#  '(START))))
(SYSTEM:FSET 'MAKE-START-ANCHOR-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
94) 12278 '#1=NIL #1# )
(SETF (SYSTEM:INLINE-EXPANSION '#1=START-ANCHOR-NODE-P) '(LAMBDA (#2=NODE) (BLOCK 
#1#  (EQUALP #2#  '(START)))))
(SYSTEM:FSET 'START-ANCHOR-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
95) 12323 '(NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-END-ANCHOR-NODE END-ANCHOR-NODE-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-END-ANCHOR-NODE) '(LAMBDA #2=NIL (BLOCK #1#  
'(END))))
(SYSTEM:FSET 'MAKE-END-ANCHOR-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
96) 12457 '#1=NIL #1# )
(SETF (SYSTEM:INLINE-EXPANSION '#1=END-ANCHOR-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(EQUALP #2#  '(END)))))
(SYSTEM:FSET 'END-ANCHOR-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 97) 
12498 '(NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-ANY-NODE ANY-NODE-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-ANY-NODE) '(LAMBDA #2=NIL (BLOCK #1#  '(ANY))))
(SYSTEM:FSET 'MAKE-ANY-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 98) 12614 
'#1=NIL #1# )
(SETF (SYSTEM:INLINE-EXPANSION '#1=ANY-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  (EQUALP 
#2#  '(ANY)))))
(SYSTEM:FSET 'ANY-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 99) 12648 
'(NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-HOOK-NODE HOOK-NODE-P HOOK-NODE-FUNCTION HOOK-NODE-SYMBOL-P 
HOOK-NODE-FUNCTION-P HOOK-NODE-INDEX-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-HOOK-NODE) '(LAMBDA (#2=FXN-ID) (BLOCK #1#  
(SYSTEM::BACKQ-LIST 'HOOK #2# ))))
(SYSTEM:FSET 'MAKE-HOOK-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 100) 
12898 '(FXN-ID) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=HOOK-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  (AND 
(LISTP #2# ) (EQ (FIRST #2# ) 'HOOK)))))
(SYSTEM:FSET 'HOOK-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 101) 12948 
'(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=HOOK-NODE-FUNCTION) '(LAMBDA (#2=HOOK-NODE) (BLOCK 
#1#  (SECOND #2# ))))
(SYSTEM:FSET 'HOOK-NODE-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
102) 13020 '(HOOK-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=HOOK-NODE-SYMBOL-P) '(LAMBDA (#2=HOOK-NODE) (BLOCK 
#1#  (SYMBOLP (HOOK-NODE-FUNCTION #2# )))))
(SYSTEM:FSET 'HOOK-NODE-SYMBOL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
103) 13080 '(HOOK-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=HOOK-NODE-FUNCTION-P) '(LAMBDA (#2=HOOK-NODE) 
(BLOCK #1#  (FUNCTIONP (HOOK-NODE-FUNCTION #2# )))))
(SYSTEM:FSET 'HOOK-NODE-FUNCTION-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
104) 13162 '(HOOK-NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=HOOK-NODE-INDEX-P) '(LAMBDA (#2=HOOK-NODE) (BLOCK 
#1#  (INTEGERP (HOOK-NODE-FUNCTION #2# )))))
(SYSTEM:FSET 'HOOK-NODE-INDEX-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 105) 
13248 '(HOOK-NODE) #1=NIL)
(PROCLAIM '(INLINE MAKE-SUCCESS-NODE SUCCESS-NODE-P SUCCESS-NODE-RC))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-SUCCESS-NODE) '(LAMBDA (#2=RC) (BLOCK #1#  
(SYSTEM::BACKQ-LIST 'SUCCEED #2# ))))
(SYSTEM:FSET 'MAKE-SUCCESS-NODE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 106) 
13446 '(RC) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=SUCCESS-NODE-P) '(LAMBDA (#2=NODE) (BLOCK #1#  
(AND (LISTP #2# ) (EQ (FIRST #2# ) 'SUCCEED)))))
(SYSTEM:FSET 'SUCCESS-NODE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 107) 
13494 '(NODE) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=SUCCESS-NODE-RC) '(LAMBDA (#2=SUCCESS-NODE) (BLOCK 
#1#  (SECOND #2# ))))
(SYSTEM:FSET 'SUCCESS-NODE-RC (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 108) 
13572 '(SUCCESS-NODE) #1=NIL)
(SYSTEM:FSET 'MAKE-REGS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 109) 13635 
'(N) #1=NIL)
(PROCLAIM '(INLINE REGISTER-START))
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGISTER-START) '(LAMBDA (#2=REGS #3=N) (BLOCK 
#1#  (CAR (SVREF #2#  #3# )))))
(SYSTEM:FSET 'REGISTER-START (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 110) 
13828 '(REGS N) #1=NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 111))
(PROCLAIM '(INLINE REGISTER-END))
(SETF (SYSTEM:INLINE-EXPANSION '#1=REGISTER-END) '(LAMBDA (#2=REGS #3=N) (BLOCK #1#  
(CDR (SVREF #2#  #3# )))))
(SYSTEM:FSET 'REGISTER-END (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 113) 13990 
'(REGS N) #1=NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 114))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 116))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 119))
(SYSTEM:FSET 'REGISTER-MATCHED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
122) 14270 '(REGS N) #1=NIL)
(SYSTEM:COMPILER-DEFSTRUCT 'RE-SCANNER :CONC-NAME '#10? :DEFAULT-CONSTRUCTOR 'MAKE-RE-SCANNER 
:COPIER 'COPY-RE-SCANNER :PREDICATE '"RE-SCANNER-P" :DIRECT-SLOTS '(#1=#(#2=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 STR #3=0 RE-SCANNER-STR "" STRING #4=NIL) #5=#(#2#  POS 1 RE-SCANNER-POS #3#  #6=FIXNUM
 #4# ) #7=#(#2#  END 2 RE-SCANNER-END #3#  #6#  #4# ) #8=#(#2#  MODE 3 RE-SCANNER-MODE
 'IN-REGEX SYMBOL #4# ) #9=#(#2#  REGNUM 4 RE-SCANNER-REGNUM #3#  #6#  #4# ) #10=#(#2# 
 UNGOT-TOKEN 5 RE-SCANNER-UNGOT-TOKEN #4#  #11=T #4# ) #12=#(#2#  UNGOT-VALUE 6 RE-SCANNER-UNGOT-VALUE
 #4#  #11#  #4# )) :SLOTS '(#1#  #5#  #7#  #8#  #9#  #10#  #12# ) :INHERITED-ACCESSORS 
'#4#  :DOCUMENTATION '#4# )
(SYSTEM:FSET 'MAKE-RE-SCANNER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 123) 
14446 '(&KEY ((:STR #11?) "") ((:POS #12?) #1=0) ((:END #13?) #1# ) ((:MODE #14?) 
'IN-REGEX) ((:REGNUM #15?) #1# ) ((:UNGOT-TOKEN #16?) #2=NIL) ((:UNGOT-VALUE #17?) 
#2# )) #2# )
(SYSTEM:FSET 'RE-SCANNER-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 124) 14446 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * STRING) RE-SCANNER-STR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 125))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 126))
(SYSTEM:PUT 'RE-SCANNER-STR 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'RE-SCANNER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 128))
(PROCLAIM '(FTYPE (FUNCTION * FIXNUM) RE-SCANNER-POS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 130))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 131))
(SYSTEM:PUT 'RE-SCANNER-POS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'RE-SCANNER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 133))
(PROCLAIM '(FTYPE (FUNCTION * FIXNUM) RE-SCANNER-END))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 135))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 136))
(SYSTEM:PUT 'RE-SCANNER-END 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'RE-SCANNER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 138))
(PROCLAIM '(FTYPE (FUNCTION * SYMBOL) RE-SCANNER-MODE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 140))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 141))
(SYSTEM:PUT 'RE-SCANNER-MODE 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 'RE-SCANNER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 143))
(PROCLAIM '(FTYPE (FUNCTION * FIXNUM) RE-SCANNER-REGNUM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 145))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 146))
(SYSTEM:PUT 'RE-SCANNER-REGNUM 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
4 'RE-SCANNER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 148))
(PROCLAIM '(FTYPE (FUNCTION * T) RE-SCANNER-UNGOT-TOKEN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 150))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 151))
(SYSTEM:PUT 'RE-SCANNER-UNGOT-TOKEN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
5 'RE-SCANNER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 153))
(PROCLAIM '(FTYPE (FUNCTION * T) RE-SCANNER-UNGOT-VALUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 155))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 156))
(SYSTEM:PUT 'RE-SCANNER-UNGOT-VALUE 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
6 'RE-SCANNER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 158))
(SYSTEM::%SET-FDEFINITION 'COPY-RE-SCANNER (FUNCTION COPY-STRUCTURE))
(SYSTEM:COMPILER-DEFSTRUCT 'CLOSURE-INFO :CONC-NAME '#32? :DEFAULT-CONSTRUCTOR 'MAKE-CLOSURE-INFO 
:COPIER 'COPY-CLOSURE-INFO :PREDICATE '"CLOSURE-INFO-P" :DIRECT-SLOTS '(#1=#(#2=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 MATCHFN 0 CLOSURE-INFO-MATCHFN #3=NIL #4=T #3# ) #5=#(#2#  INITFN 1 CLOSURE-INFO-INITFN
 #3#  #4#  #3# ) #6=#(#2#  LINKFN 2 CLOSURE-INFO-LINKFN #3#  #4#  #3# )) :SLOTS '(#1#  
#5#  #6# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION '#3# )
(SYSTEM:FSET 'MAKE-CLOSURE-INFO (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 160) 
14646 '(&KEY ((:MATCHFN #33?) #1=NIL) ((:INITFN #34?) #1# ) ((:LINKFN #35?) #1# )) 
#1# )
(SYSTEM:FSET 'CLOSURE-INFO-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 161) 
14646 '(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) CLOSURE-INFO-MATCHFN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 162))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 163))
(SYSTEM:PUT 'CLOSURE-INFO-MATCHFN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'CLOSURE-INFO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 165))
(PROCLAIM '(FTYPE (FUNCTION * T) CLOSURE-INFO-INITFN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 167))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 168))
(SYSTEM:PUT 'CLOSURE-INFO-INITFN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'CLOSURE-INFO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 170))
(PROCLAIM '(FTYPE (FUNCTION * T) CLOSURE-INFO-LINKFN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 172))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 173))
(SYSTEM:PUT 'CLOSURE-INFO-LINKFN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'CLOSURE-INFO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 175))
(SYSTEM::%SET-FDEFINITION 'COPY-CLOSURE-INFO (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET 'RESOLVE-INSTR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 177) 
14698 '(CLOSURE-VEC INSTR-NUM) #1=NIL)
(SYSTEM:FSET 'RESOLVE-LINKFN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 178) 
14799 '(CLOSURE-VEC INSTR-NUM) #1=NIL)
(SYSTEM:FSET 'RESOLVE-INITFN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 179) 
14900 '(CLOSURE-VEC INSTR-NUM) #1=NIL)
(SYSTEM:COMPILER-DEFSTRUCT 'MATCHER :CONC-NAME '#42? :DEFAULT-CONSTRUCTOR 'MAKE-MATCHER 
:COPIER 'COPY-MATCHER :PREDICATE '"MATCHER-P" :DIRECT-SLOTS '(#1=#(#2=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 SIMPLE-STRING-MATCHFN 0 MATCHER-SIMPLE-STRING-MATCHFN #3=NIL #4=T #3# ) #5=#(#2# 
 STRING-MATCHFN 1 MATCHER-STRING-MATCHFN #3#  #4#  #3# ) #6=#(#2#  NUMREGS 2 MATCHER-NUMREGS
 #3#  #4#  #3# ) #7=#(#2#  MATCHSTR 3 MATCHER-MATCHSTR #3#  #4#  #3# ) #8=#(#2#  MATCHEXPR
 4 MATCHER-MATCHEXPR #3#  #4#  #3# ) #9=#(#2#  ACCEPTFN 5 MATCHER-ACCEPTFN #3#  #4# 
 #3# )) :SLOTS '(#1#  #5#  #6#  #7#  #8#  #9# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION 
'#3# )
(SYSTEM:FSET 'MAKE-MATCHER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 180) 15001 
'(&KEY ((:SIMPLE-STRING-MATCHFN #43?) #1=NIL) ((:STRING-MATCHFN #44?) #1# ) ((:NUMREGS 
#45?) #1# ) ((:MATCHSTR #46?) #1# ) ((:MATCHEXPR #47?) #1# ) ((:ACCEPTFN #48?) #1# )) 
#1# )
(SYSTEM:FSET 'MATCHER-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 181) 15001 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) MATCHER-SIMPLE-STRING-MATCHFN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 182))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 183))
(SYSTEM:PUT 'MATCHER-SIMPLE-STRING-MATCHFN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'MATCHER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 185))
(PROCLAIM '(FTYPE (FUNCTION * T) MATCHER-STRING-MATCHFN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 187))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 188))
(SYSTEM:PUT 'MATCHER-STRING-MATCHFN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'MATCHER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 190))
(PROCLAIM '(FTYPE (FUNCTION * T) MATCHER-NUMREGS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 192))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 193))
(SYSTEM:PUT 'MATCHER-NUMREGS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'MATCHER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 195))
(PROCLAIM '(FTYPE (FUNCTION * T) MATCHER-MATCHSTR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 197))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 198))
(SYSTEM:PUT 'MATCHER-MATCHSTR 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 'MATCHER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 200))
(PROCLAIM '(FTYPE (FUNCTION * T) MATCHER-MATCHEXPR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 202))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 203))
(SYSTEM:PUT 'MATCHER-MATCHEXPR 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
4 'MATCHER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 205))
(PROCLAIM '(FTYPE (FUNCTION * T) MATCHER-ACCEPTFN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 207))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 208))
(SYSTEM:PUT 'MATCHER-ACCEPTFN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
5 'MATCHER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 210))
(SYSTEM::%SET-FDEFINITION 'COPY-MATCHER (FUNCTION COPY-STRUCTURE))
(DEFCONSTANT +MAX-REGEX-STR-CACHE+ 500 "Max number of entries in the regex compiler cache.")
(DEFVAR *PATTERN-CACHE* (MAKE-HASH-TABLE :TEST (FUNCTION EQUAL)))
(SYSTEM:FSET 'CLEAR-PATTERN-CACHE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
212) 15252 '#1=NIL #1# )
(DEFPARAMETER +SPECIAL-CLASS-NAMES+ '((":alpha:" ALPHA) (":upper:" UPPER) (":lower:" 
LOWER) (":digit:" DIGIT) (":alnum:" ALNUM) (":xdigit:" XDIGIT) (":odigit:" ODIGIT) 
(":punct:" PUNCT) (":space:" SPACE) (":word:" WORDCHAR)))
(SYSTEM:FSET 'EXPAND-CHAR-CLASS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 213) 
15556 '(CHARS) "Expand an encoded char class into an explicit enumeration of all
the chars, e.g. 'a-fA-F' --> 'abcdefABCDEF'.")
(SYSTEM:FSET 'PARSE-STD-CHAR-CLASS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
214) 15738 '(IN) #1=NIL)
(SYSTEM:FSET 'GENERATE-CHAR-RANGE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
215) 16523 '(STRM START END) #1=NIL)
