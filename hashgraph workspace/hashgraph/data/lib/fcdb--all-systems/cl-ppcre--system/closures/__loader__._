"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/dists/quicklisp/software/cl-ppcre-2.0.4/closures.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-41229 #:ENVIRONMENT-41230))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.closures_tmp4MHY1EAB"))
(SYSTEM:%IN-PACKAGE "CL-PPCRE")
(PROCLAIM '(INLINE *STRING*= *STRING*-EQUAL))
(SETF (SYSTEM:INLINE-EXPANSION '#1=*STRING*=) '(LAMBDA (#2=STRING2 #3=START1 #4=END1 
#5=START2 #6=END2) (#7=DECLARE (OPTIMIZE SPEED (SAFETY #8=0) (SPACE #8# ) (DEBUG 
1) (COMPILATION-SPEED #8# ))) (#7#  (#9=FIXNUM #3#  #4#  #5#  #6# )) (BLOCK #1#  
(LOOP #10=FOR #11=STRING1-IDX #12=OF-TYPE #9#  #13=FROM #3#  #14=BELOW #4#  #10#  
#15=STRING2-IDX #12#  #9#  #13#  #5#  #14#  #6#  ALWAYS (CHAR= (#16=SCHAR *STRING* 
#11# ) (#16#  #2#  #15# ))))))
(SYSTEM:FSET '*STRING*= (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 0) 1663 '(STRING2 
START1 END1 START2 END2) "Like STRING=, i.e. compares the special string *STRING* from START1
to END1 with STRING2 from START2 to END2. Note that there's no
boundary check - this has to be implemented by the caller.")
(SETF (SYSTEM:INLINE-EXPANSION '#1=*STRING*-EQUAL) '(LAMBDA (#2=STRING2 #3=START1 
#4=END1 #5=START2 #6=END2) (#7=DECLARE (OPTIMIZE SPEED (SAFETY #8=0) (SPACE #8# ) 
(DEBUG 1) (COMPILATION-SPEED #8# ))) (#7#  (#9=FIXNUM #3#  #4#  #5#  #6# )) (BLOCK 
#1#  (LOOP #10=FOR #11=STRING1-IDX #12=OF-TYPE #9#  #13=FROM #3#  #14=BELOW #4#  
#10#  #15=STRING2-IDX #12#  #9#  #13#  #5#  #14#  #6#  ALWAYS (CHAR-EQUAL (#16=SCHAR 
*STRING* #11# ) (#16#  #2#  #15# ))))))
(SYSTEM:FSET '*STRING*-EQUAL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 2224 
'(STRING2 START1 END1 START2 END2) "Like STRING-EQUAL, i.e. compares the special string *STRING* from
START1 to END1 with STRING2 from START2 to END2. Note that there's no
boundary check - this has to be implemented by the caller.")
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=SEQ NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 3) :FAST-FUNCTION (#3#  #4#  
4))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=ALTERNATION NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 5) :FAST-FUNCTION (#3#  #4#  
8))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=REGISTER NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 11) :FAST-FUNCTION (#3#  #4#  
14))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=LOOKAHEAD NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 17) :FAST-FUNCTION (#3#  #4#  
20))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=LOOKBEHIND NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 23) :FAST-FUNCTION (#3#  #4#  
26))
(SYSTEM:FSET '#1=INSERT-CHAR-CLASS-TESTER (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 29)) 8095 '((CHAR-CLASS CHR-EXPR) &BODY BODY))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=CHAR-CLASS NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 31) :FAST-FUNCTION (#3#  #4#  
33))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=STR NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 35) :FAST-FUNCTION (#3#  #4#  
43))
(PROCLAIM '(INLINE WORD-BOUNDARY-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=WORD-BOUNDARY-P) '(LAMBDA (#2=START-POS) (#3=DECLARE 
(OPTIMIZE SPEED (SAFETY #4=0) (SPACE #4# ) (DEBUG 1) (COMPILATION-SPEED #4# ))) (#3#  
(FIXNUM #2# )) (BLOCK #1#  (LET ((#5=1-START-POS (1- #2# )) (#6=*START-POS* (#7=OR 
*REAL-START-POS* #6# ))) (#7#  (#8=AND (#7#  (#9== #2#  #10=*END-POS*) (#8#  (#11=< 
#2#  #10# ) (#12=NOT (#13=WORD-CHAR-P (#14=SCHAR #15=*STRING* #2# ))))) (#8#  (#11#  
#5#  #10# ) (#16=<= #6#  #5# ) (#13#  (#14#  #15#  #5# )))) (#8#  (#7#  (#9#  #2#  
#6# ) (#8#  (#11#  #5#  #10# ) (#16#  #6#  #5# ) (#12#  (#13#  (#14#  #15#  #5# ))))) 
(#8#  (#11#  #2#  #10# ) (#13#  (#14#  #15#  #2# )))))))))
(SYSTEM:FSET 'WORD-BOUNDARY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 51) 
13533 '(START-POS) "Check whether START-POS is a word-boundary within *STRING*.")
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=WORD-BOUNDARY NEXT-FN) 
:QUALIFIERS '#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) 
:FUNCTION (#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 52) :FAST-FUNCTION 
(#3#  #4#  55))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=EVERYTHING NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 58) :FAST-FUNCTION (#3#  #4#  
61))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=ANCHOR NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 64) :FAST-FUNCTION (#3#  #4#  
70))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=BACK-REFERENCE NEXT-FN) 
:QUALIFIERS '#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) 
:FUNCTION (#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 76) :FAST-FUNCTION 
(#3#  #4#  79))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=BRANCH NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 82) :FAST-FUNCTION (#3#  #4#  
85))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=STANDALONE NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 88) :FAST-FUNCTION (#3#  #4#  
90))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=FILTER NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 92) :FAST-FUNCTION (#3#  #4#  
94))
(MOP::ENSURE-METHOD 'CREATE-MATCHER-AUX :LAMBDA-LIST '(#1=VOID NEXT-FN) :QUALIFIERS 
'#2=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST '#1#  'T)) :FUNCTION 
(#3=SYSTEM::GET-FASL-FUNCTION #4=SYSTEM:*FASL-LOADER* 96) :FAST-FUNCTION (#3#  #4#  
97))
