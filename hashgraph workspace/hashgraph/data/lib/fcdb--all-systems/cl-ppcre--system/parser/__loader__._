"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/dists/quicklisp/software/cl-ppcre-2.0.4/parser.lisp")

(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.parser_tmp3M1EXB8L"))
(SYSTEM:%IN-PACKAGE "CL-PPCRE")
(SYSTEM:FSET 'GROUP (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 0) 1848 '(LEXER) 
"Parses and consumes a <group>.
The productions are: <group> -> \"(\"<regex>\")\"
                                \"(?:\"<regex>\")\"
                                \"(?>\"<regex>\")\"
                                \"(?<flags>:\"<regex>\")\"
                                \"(?=\"<regex>\")\"
                                \"(?!\"<regex>\")\"
                                \"(?<=\"<regex>\")\"
                                \"(?<!\"<regex>\")\"
                                \"(?(\"<num>\")\"<regex>\")\"
                                \"(?(\"<regex>\")\"<regex>\")\"
                                \"(?<name>\"<regex>\")\" (when *ALLOW-NAMED-REGISTERS* is T)
                                <legal-token>
where <flags> is parsed by the lexer function MAYBE-PARSE-FLAGS.
Will return <parse-tree> or (<grouping-type> <parse-tree>) where
<grouping-type> is one of six keywords - see source for details.")
(SYSTEM:FSET 'GREEDY-QUANT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 8407 
'(LEXER) "Parses and consumes a <greedy-quant>.
The productions are: <greedy-quant> -> <group> | <group><quantifier>
where <quantifier> is parsed by the lexer function GET-QUANTIFIER.
Will return <parse-tree> or (:GREEDY-REPETITION <min> <max> <parse-tree>).")
(SYSTEM:FSET 'QUANT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2) 9001 '(LEXER) 
"Parses and consumes a <quant>.
The productions are: <quant> -> <greedy-quant> | <greedy-quant>\"?\".
Will return the <parse-tree> returned by GREEDY-QUANT and optionally
change :GREEDY-REPETITION to :NON-GREEDY-REPETITION.")
(SYSTEM:FSET 'SEQ (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3) 9578 '(LEXER) 
"Parses and consumes a <seq>.
The productions are: <seq> -> <quant> | <quant><seq>.
Will return <parse-tree> or (:SEQUENCE <parse-tree> <parse-tree>).")
(SYSTEM:FSET 'REG-EXPR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5) 11909 '(LEXER) 
"Parses and consumes a <regex>, a complete regular expression.
The productions are: <regex> -> <seq> | <seq>\"|\"<regex>.
Will return <parse-tree> or (:ALTERNATION <parse-tree> <parse-tree>).")
(SYSTEM:FSET 'PARSE-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 6) 13899 
'(STRING) "Translate the regex string STRING into a parse tree.")
