"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/dists/quicklisp/software/cl-ppcre-2.0.4/util.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-29059 #:ENVIRONMENT-29060 #:WHOLE-29088 #:ENVIRONMENT-29089 #:WHOLE-29191 #:ENVIRONMENT-29192 #:WHOLE-29265 #:ENVIRONMENT-29266))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.util_tmpUPCOM7AO"))
(SYSTEM:%IN-PACKAGE "CL-PPCRE")
(SYSTEM:FSET '#1=DEFCONSTANT (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 0)) 1645 '(NAME VALUE &OPTIONAL DOC))
(SYSTEM:FSET '#1=WITH-UNIQUE-NAMES (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 1)) 1864 '((&REST BINDINGS) &BODY BODY))
(SYSTEM:FSET '#1=WITH-REBINDING (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 3)) 3408 '(BINDINGS &BODY BODY))
(PROCLAIM '(INLINE DIGIT-CHAR-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=DIGIT-CHAR-P) '(LAMBDA (#2=CHR) (DECLARE (OPTIMIZE 
SPEED (SAFETY #3=0) (SPACE #3# ) (DEBUG 1) (COMPILATION-SPEED #3# ))) (BLOCK #1#  
(CHAR<= #\0 #2#  #\9))))
(SYSTEM:FSET 'DIGIT-CHAR-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 4) 4829 
'(CHR) "Tests whether a character is a decimal digit, i.e. the same as
Perl's [\\d].  Note that this function shadows the standard Common
Lisp function CL:DIGIT-CHAR-P.")
(PROCLAIM '(INLINE WORD-CHAR-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=WORD-CHAR-P) '(LAMBDA (#2=CHR) (DECLARE (OPTIMIZE 
SPEED (SAFETY #3=0) (SPACE #3# ) (DEBUG 1) (COMPILATION-SPEED #3# ))) (BLOCK #1#  
(OR (ALPHANUMERICP #2# ) (CHAR= #2#  #\_)))))
(SYSTEM:FSET 'WORD-CHAR-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5) 5121 
'(CHR) "Tests whether a character is a \"word\" character.  In the ASCII
charset this is equivalent to a-z, A-Z, 0-9, or _, i.e. the same as
Perl's [\\w].")
(COMMON-LISP:DEFCONSTANT #1=+WHITESPACE-CHAR-STRING+ (IF (BOUNDP '#1# ) (SYMBOL-VALUE 
'#1# ) (COERCE '(#2=#\  #\Tab #3=#\Newline #\Return #\Page) 'STRING)) "A string of all characters which are considered to be whitespace.
Same as Perl's [\\s].")
(SYSTEM:FSET 'WHITESPACEP (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 6) 5587 
'(CHR) "Tests whether a character is whitespace, i.e. whether it would
match [\\s] in Perl.")
(SYSTEM:FSET '#1=MAYBE-COERCE-TO-SIMPLE-STRING (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 7)) 5796 '(STRING))
(PROCLAIM '(INLINE NSUBSEQ))
(SETF (SYSTEM:INLINE-EXPANSION 'NSUBSEQ) '#1=NIL)
(SYSTEM:FSET 'NSUBSEQ (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8) 6327 '(#1=SEQUENCE 
START &OPTIONAL (END (LENGTH #1# ))) "Returns a subsequence by pointing to location in original sequence.")
(SYSTEM:FSET 'NORMALIZE-VAR-LIST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
9) 6634 '(VAR-LIST) "Utility function for REGISTER-GROUPS-BIND and DO-REGISTER-GROUPS.
Creates the long form (a list of (FUNCTION VAR) entries) out of the
short form of VAR-LIST.")
(SYSTEM:FSET 'STRING-LIST-TO-SIMPLE-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
10) 7070 '(STRING-LIST) "Concatenates a list of strings to one simple-string.")
(SYSTEM:FSET 'COMPLEMENT* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 11) 7979 
'(TEST-FUNCTION) "Like COMPLEMENT but optimized for unary functions.")
