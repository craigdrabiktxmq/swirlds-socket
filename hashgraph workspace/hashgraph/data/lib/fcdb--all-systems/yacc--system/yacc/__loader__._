"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/dists/quicklisp/software/cl-yacc-20101006-darcs/yacc.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:PRODUCTION- #:G56205 #:G56251 #:G56303 #:G56348 #:G56400 #:G56445 #:G56496 #:G56542 #:G56594 #:G56639 #:GRAMMAR- #:G56816 #:G56817 #:G56818 #:G56819 #:G56820 #:G56821 #:G56822 #:G56823 #:G56869 #:G56914 #:G56966 #:G57010 #:G57062 #:G57107 #:G57158 #:G57203 #:G57255 #:G57301 #:G57353 #:G57398 #:G57450 #:G57495 #:G57547 #:G57592 #:ITEM- #:G58490 #:G58536 #:G58588 #:G58633 #:G58722 #:G58767 #:G58837 #:G58883 #:KERNEL- #:G59494 #:G59540 #:G59592 #:G59636 #:G59688 #:G59733 #:WHOLE-60240 #:ENVIRONMENT-60241 #:GOTO- #:G60589 #:G60635 #:G60687 #:G60732 #:ACTION- #:ACCEPT-ACTION- #:REDUCE-ACTION- #:G62013 #:G62059 #:G62111 #:G62156 #:G62208 #:G62254 #:G62305 #:G62350 #:SHIFT-ACTION- #:G62421 #:G62467 #:PARSER- #:G63018 #:G63064 #:G63116 #:G63161 #:G63213 #:G63259 #:WHOLE-64196 #:ENVIRONMENT-64197 #:WHOLE-64219 #:ENVIRONMENT-64220))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.yacc_tmp4JWY8VE5"))
(SYSTEM::%DEFPACKAGE "YACC" '#1=COMMON-LISP:NIL '#1#  '#1#  (#2=SYSTEM::ENSURE-AVAILABLE-SYMBOLS 
'#1# ) '("COMMON-LISP") (#2#  '#1# ) '#1#  '("MAKE-PRODUCTION" "MAKE-GRAMMAR" "MAKE-PARSER" 
"PARSE-WITH-LEXER" "DEFINE-GRAMMAR" "DEFINE-PARSER" "YACC-COMPILE-WARNING" "CONFLICT-WARNING" 
"CONFLICT-SUMMARY-WARNING" "YACC-RUNTIME-ERROR" "YACC-PARSE-ERROR" "YACC-PARSE-ERROR-TERMINAL" 
"YACC-PARSE-ERROR-VALUE" "YACC-PARSE-ERROR-EXPECTED-TERMINALS") '#1#  '#1# )
(SYSTEM:%IN-PACKAGE "YACC")
(SYSTEM:FSET 'REQUIRED-ARGUMENT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 0) 
1591 '#1=NIL #1# )
(PROCLAIM '(INLINE MEMQ))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MEMQ) '(LAMBDA (#2=ITEM #3=LIST) (BLOCK #1#  (MEMBER 
#2#  #3#  :TEST (FUNCTION EQ)))))
(SYSTEM:FSET 'MEMQ (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 1705 '(ITEM 
LIST) "MEMBER :TEST #'EQ")
(DEFTYPE INDEX #1=NIL '(UNSIGNED-BYTE 14))
(DEFTYPE SIGNED-INDEX #1=NIL '(SIGNED-BYTE 15))
(SYSTEM:COMPILER-DEFSTRUCT 'PRODUCTION :CONC-NAME '#0? :DEFAULT-CONSTRUCTOR '#1=NIL 
:CONSTRUCTORS '((MAKE-PRODUCTION (#2=SYMBOL #3=DERIVES &KEY #4=ACTION #5=ACTION-FORM))) 
:COPIER 'COPY-PRODUCTION :PREDICATE '"PRODUCTION-P" #6=:PRINT-FUNCTION '(#6#  PRINT-PRODUCTION) 
:DIRECT-SLOTS '(#7=#(#8=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION ID 0 PRODUCTION-ID #1# 
 (OR NULL INDEX) #1# ) #9=#(#8#  #2#  1 PRODUCTION-SYMBOL (#10=REQUIRED-ARGUMENT)
 #2#  #1# ) #11=#(#8#  #3#  2 PRODUCTION-DERIVES (#10# ) #12=LIST #1# ) #13=#(#8# 
 #4#  3 PRODUCTION-ACTION (#14=FUNCTION #12# ) #14#  #1# ) #15=#(#8#  #5#  4 PRODUCTION-ACTION-FORM
 #1#  T #1# )) :SLOTS '(#7#  #9#  #11#  #13#  #15# ) :INHERITED-ACCESSORS '#1#  :DOCUMENTATION 
'#1# )
(PROCLAIM '(INLINE MAKE-PRODUCTION))
(SETF (SYSTEM:INLINE-EXPANSION 'MAKE-PRODUCTION) '#1=NIL)
(SYSTEM:FSET 'MAKE-PRODUCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2) 
1875 '(SYMBOL DERIVES &KEY (ACTION (FUNCTION LIST)) (ACTION-FORM #1=NIL)) #1# )
(SYSTEM:FSET 'PRODUCTION-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3) 1875 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * (OR NULL INDEX)) PRODUCTION-ID))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 4))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5))
(SYSTEM:PUT 'PRODUCTION-ID 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 
'PRODUCTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 7))
(PROCLAIM '(FTYPE (FUNCTION * SYMBOL) PRODUCTION-SYMBOL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 9))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
(SYSTEM:PUT 'PRODUCTION-SYMBOL 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'PRODUCTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 12))
(PROCLAIM '(FTYPE (FUNCTION * LIST) PRODUCTION-DERIVES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 14))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 15))
(SYSTEM:PUT 'PRODUCTION-DERIVES 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'PRODUCTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 17))
(PROCLAIM '(FTYPE (#1=FUNCTION * #1# ) PRODUCTION-ACTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 19))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 20))
(SYSTEM:PUT 'PRODUCTION-ACTION 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 'PRODUCTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 22))
(PROCLAIM '(FTYPE (FUNCTION * T) PRODUCTION-ACTION-FORM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 24))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 25))
(SYSTEM:PUT 'PRODUCTION-ACTION-FORM 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
4 'PRODUCTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 27))
(SYSTEM::%SET-FDEFINITION 'COPY-PRODUCTION (FUNCTION COPY-STRUCTURE))
(REQUIRE "PRINT-OBJECT")
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(SYSTEM::INSTANCE STREAM) :QUALIFIERS 
'#1=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PRODUCTION 'T)) :FUNCTION 
(#2=SYSTEM::GET-FASL-FUNCTION #3=SYSTEM:*FASL-LOADER* 29) :FAST-FUNCTION (#2#  #3#  
30))
(SYSTEM:FSET 'PRINT-PRODUCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 31) 
2268 '(P S D) #1=NIL)
(PROCLAIM '(INLINE PRODUCTION-EQUAL-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=PRODUCTION-EQUAL-P) '(LAMBDA (#2=P1 #3=P2) (DECLARE 
(TYPE PRODUCTION #2#  #3# )) (BLOCK #1#  (EQ #2#  #3# ))))
(SYSTEM:FSET 'PRODUCTION-EQUAL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
34) 2515 '(P1 P2) "Equality predicate for productions within a single grammar")
(PROCLAIM '(INLINE PRODUCTION<))
(SETF (SYSTEM:INLINE-EXPANSION '#1=PRODUCTION<) '(LAMBDA (#2=P1 #3=P2) (DECLARE (TYPE 
PRODUCTION #2#  #3# )) (BLOCK #1#  (< (#4=PRODUCTION-ID #2# ) (#4#  #3# )))))
(SYSTEM:FSET 'PRODUCTION< (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 35) 2694 
'(P1 P2) "Total order on productions within a single grammar")
(SYSTEM:COMPILER-DEFSTRUCT 'GRAMMAR :CONC-NAME '#11? :DEFAULT-CONSTRUCTOR '#1=%MAKE-GRAMMAR 
:CONSTRUCTORS '((#1#  #2=NIL)) :COPIER 'COPY-GRAMMAR :PREDICATE '"GRAMMAR-P" :DIRECT-SLOTS 
'(#3=#(#4=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION NAME 0 GRAMMAR-NAME #2#  T #2# ) #5=#(#4# 
 TERMINALS 1 GRAMMAR-TERMINALS '#2#  #6=LIST #2# ) #7=#(#4#  PRECEDENCE 2 GRAMMAR-PRECEDENCE
 '#2#  #6#  #2# ) #8=#(#4#  PRODUCTIONS 3 GRAMMAR-PRODUCTIONS '#2#  #6#  #2# ) #9=#(#4# 
 %SYMBOLS 4 GRAMMAR-%SYMBOLS #10=:UNDEFINED (OR #6#  (MEMBER #10# )) #2# ) #11=#(#4# 
 DERIVES-EPSILON 5 GRAMMAR-DERIVES-EPSILON '#2#  #6#  #2# ) #12=#(#4#  DERIVES-FIRST
 6 GRAMMAR-DERIVES-FIRST '#2#  #6#  #2# ) #13=#(#4#  DERIVES-FIRST-TERMINAL 7 GRAMMAR-DERIVES-FIRST-TERMINAL
 '#2#  #6#  #2# )) :SLOTS '(#3#  #5#  #7#  #8#  #9#  #11#  #12#  #13# ) :INHERITED-ACCESSORS 
'#2#  :DOCUMENTATION '#2# )
(SYSTEM:FSET '%MAKE-GRAMMAR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 36) 2857 
'(&KEY ((:NAME #12?) #1=NIL) ((:TERMINALS #13?) '#1# ) ((:PRECEDENCE #14?) '#1# ) 
((:PRODUCTIONS #15?) '#1# ) ((:%SYMBOLS #16?) :UNDEFINED) ((:DERIVES-EPSILON #17?) 
'#1# ) ((:DERIVES-FIRST #18?) '#1# ) ((:DERIVES-FIRST-TERMINAL #19?) '#1# )) #1# )
(SYSTEM:FSET 'GRAMMAR-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 37) 2857 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) GRAMMAR-NAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 38))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 39))
(SYSTEM:PUT 'GRAMMAR-NAME 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 
'GRAMMAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 41))
(PROCLAIM '(FTYPE (FUNCTION * LIST) GRAMMAR-TERMINALS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 43))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 44))
(SYSTEM:PUT 'GRAMMAR-TERMINALS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'GRAMMAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 46))
(PROCLAIM '(FTYPE (FUNCTION * LIST) GRAMMAR-PRECEDENCE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 48))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 49))
(SYSTEM:PUT 'GRAMMAR-PRECEDENCE 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'GRAMMAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 51))
(PROCLAIM '(FTYPE (FUNCTION * LIST) GRAMMAR-PRODUCTIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 53))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54))
(SYSTEM:PUT 'GRAMMAR-PRODUCTIONS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 'GRAMMAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 56))
(PROCLAIM '(FTYPE (FUNCTION * (OR LIST (MEMBER :UNDEFINED))) GRAMMAR-%SYMBOLS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 58))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 59))
(SYSTEM:PUT 'GRAMMAR-%SYMBOLS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
4 'GRAMMAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 61))
(PROCLAIM '(FTYPE (FUNCTION * LIST) GRAMMAR-DERIVES-EPSILON))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 63))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 64))
(SYSTEM:PUT 'GRAMMAR-DERIVES-EPSILON 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
5 'GRAMMAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 66))
(PROCLAIM '(FTYPE (FUNCTION * LIST) GRAMMAR-DERIVES-FIRST))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 68))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 69))
(SYSTEM:PUT 'GRAMMAR-DERIVES-FIRST 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
6 'GRAMMAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 71))
(PROCLAIM '(FTYPE (FUNCTION * LIST) GRAMMAR-DERIVES-FIRST-TERMINAL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 73))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 74))
(SYSTEM:PUT 'GRAMMAR-DERIVES-FIRST-TERMINAL 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
7 'GRAMMAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 76))
(SYSTEM::%SET-FDEFINITION 'COPY-GRAMMAR (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET 'MAKE-GRAMMAR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 78) 3197 
'(&KEY NAME (START-SYMBOL (REQUIRED-ARGUMENT)) TERMINALS PRECEDENCE PRODUCTIONS) 
#1=NIL)
(SYSTEM:FSET 'GRAMMAR-DISCARD-MEMOS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
79) 3807 '(GRAMMAR) #1=NIL)
(SYSTEM:FSET 'TERMINAL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 80) 4041 
'(SYMBOL GRAMMAR) #1=NIL)
(SYSTEM:FSET 'GRAMMAR-SYMBOLS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 81) 
4217 '(GRAMMAR) "The set of symbols (both terminal and nonterminal) of GRAMMAR.")
(SYSTEM:FSET 'GRAMMAR-EPSILON-PRODUCTIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
82) 4693 '(GRAMMAR) #1=NIL)
(SYSTEM:FSET 'DERIVES-EPSILON (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 84) 
4850 '(SYMBOL GRAMMAR &OPTIONAL SEEN) "True if symbol derives epsilon.")
(SYSTEM:FSET 'DERIVES-EPSILON* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 85) 
5427 '(SYMBOL GRAMMAR &OPTIONAL SEEN) "Unmemoised version of DERIVES-EPSILON.")
(SYSTEM:FSET 'SEQUENCE-DERIVES-EPSILON (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
87) 5847 '(SEQUENCE GRAMMAR) "Sequence version of DERIVES-EPSILON*.")
(SYSTEM:FSET 'PRINT-DERIVES-EPSILON (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
89) 6055 '(GRAMMAR &OPTIONAL (STREAM *STANDARD-OUTPUT*)) #1=NIL)
(SYSTEM:FSET 'DERIVES-FIRST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 91) 6471 
'(C GRAMMAR &OPTIONAL SEEN) "The list of symbols A such that C rm->* A.eta for some eta.")
(SYSTEM:FSET 'SEQUENCE-DERIVES-FIRST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
92) 7386 '(SEQUENCE GRAMMAR &OPTIONAL SEEN) "Sequence version of DERIVES-FIRST.")
(SYSTEM:FSET 'DERIVES-FIRST-TERMINAL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
93) 7865 '(C GRAMMAR &OPTIONAL SEEN) "The list of terminals a such that C rm->* a.eta, last non-epsilon.")
(SYSTEM:FSET 'SEQUENCE-DERIVES-FIRST-TERMINAL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
94) 8737 '(SEQUENCE GRAMMAR &OPTIONAL SEEN) "Sequence version of DERIVES-FIRST-TERMINAL.")
(SYSTEM:FSET 'FIRST-TERMINALS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 95) 
9024 '(S GRAMMAR) "FIRST(s) without epsilon.")
(SYSTEM:FSET 'SEQUENCE-FIRST-TERMINALS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
97) 9292 '(S GRAMMAR) "Sequence version of FIRST-TERMINALS.")
(SYSTEM:FSET 'PRINT-FIRST-TERMINALS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
98) 9637 '(GRAMMAR &OPTIONAL (STREAM *STANDARD-OUTPUT*)) "Print FIRST (without epsilon) for all symbols of GRAMMAR.")
(SYSTEM:FSET 'SEQUENCE-FIRST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 102) 
10116 '(S GRAMMAR) "FIRST(s).")
(SYSTEM:FSET 'COMBINE-FIRST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 103) 
10346 '(F1 S GRAMMAR) "FIRST(s1.s) where f1=FIRST(s1).")
(SYSTEM:FSET 'RELATIVE-FIRST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 104) 
10566 '(S A GRAMMAR &OPTIONAL SEEN) "Union of FIRST(eta) for all the eta s.t. S rm->* Aeta.")
(SYSTEM:FSET 'RELATIVE-FIRST-SEQUENCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
105) 11306 '(S A GRAMMAR &OPTIONAL SEEN) "Sequence version of RELATIVE-FIRST.")
(SYSTEM:COMPILER-DEFSTRUCT 'ITEM :CONC-NAME '#36? :DEFAULT-CONSTRUCTOR '#1=NIL :CONSTRUCTORS 
'((#1#  #1# )) :COPIER '%COPY-ITEM :PREDICATE '"ITEM-P" #2=:PRINT-FUNCTION '(#2#  
PRINT-ITEM) :DIRECT-SLOTS '(#3=#(#4=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #5=PRODUCTION
 0 ITEM-PRODUCTION (#6=REQUIRED-ARGUMENT) #5#  #1# ) #7=#(#4#  POSITION 1 ITEM-POSITION
 (#6# ) INDEX #1# )) :SLOTS '(#3#  #7# ) :INHERITED-ACCESSORS '#1#  :DOCUMENTATION 
'#1# )
(SYSTEM:FSET 'ITEM-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 106) 11698 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * PRODUCTION) ITEM-PRODUCTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 107))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 108))
(SYSTEM:PUT 'ITEM-PRODUCTION 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'ITEM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 110))
(PROCLAIM '(FTYPE (FUNCTION * INDEX) ITEM-POSITION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 112))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 113))
(SYSTEM:PUT 'ITEM-POSITION 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 
'ITEM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 115))
(SYSTEM::%SET-FDEFINITION '%COPY-ITEM (FUNCTION COPY-STRUCTURE))
(REQUIRE "PRINT-OBJECT")
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(SYSTEM::INSTANCE STREAM) :QUALIFIERS 
'#1=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'ITEM 'T)) :FUNCTION 
(#2=SYSTEM::GET-FASL-FUNCTION #3=SYSTEM:*FASL-LOADER* 117) :FAST-FUNCTION (#2#  #3#  
118))
(SYSTEM:COMPILER-DEFSTRUCT 'LR0-ITEM :CONC-NAME 'ITEM- :DEFAULT-CONSTRUCTOR '#1=NIL 
:CONSTRUCTORS '((MAKE-ITEM (#2=PRODUCTION #3=POSITION))) :COPIER 'COPY-LR0-ITEM :INCLUDE 
'(ITEM) :PREDICATE '"LR0-ITEM-P" :DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 LOOKAHEADS 2 ITEM-LOOKAHEADS '#1#  LIST #1# )) :SLOTS '(#(#5#  #2#  0 #6=ITEM-PRODUCTION
 (#7=REQUIRED-ARGUMENT) #2#  #1# ) #(#5#  #3#  1 #8=ITEM-POSITION (#7# ) INDEX #1# ) 
#4# ) :INHERITED-ACCESSORS '((#8#  . #3# ) (#6#  . #2# )) :DOCUMENTATION '#1# )
(PROCLAIM '(INLINE MAKE-ITEM))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-ITEM) '(LAMBDA (#2=PRODUCTION #3=POSITION) 
(BLOCK #1#  (SYSTEM:MAKE-STRUCTURE (EXTENSIONS:TRULY-THE SYMBOL 'LR0-ITEM) #2#  #3#  
'#4=NIL))))
(SYSTEM:FSET 'MAKE-ITEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 119) 11934 
'(PRODUCTION POSITION) #1=NIL)
(SYSTEM:FSET 'LR0-ITEM-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 120) 11934 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * LIST) ITEM-LOOKAHEADS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 121))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 122))
(SYSTEM:PUT 'ITEM-LOOKAHEADS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'LR0-ITEM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 124))
(SYSTEM::%SET-FDEFINITION 'COPY-LR0-ITEM (FUNCTION COPY-STRUCTURE))
(SYSTEM:COMPILER-DEFSTRUCT 'LR1-ITEM :CONC-NAME 'ITEM- :DEFAULT-CONSTRUCTOR '#1=NIL 
:CONSTRUCTORS '((MAKE-LR1-ITEM (#2=PRODUCTION #3=POSITION #4=LOOKAHEAD))) :COPIER 
'COPY-LR1-ITEM :INCLUDE '(ITEM) :PREDICATE '"LR1-ITEM-P" :DIRECT-SLOTS '(#5=#(#6=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 #4#  2 ITEM-LOOKAHEAD (#7=REQUIRED-ARGUMENT) SYMBOL #1# )) :SLOTS '(#(#6#  #2#  0
 #8=ITEM-PRODUCTION (#7# ) #2#  #1# ) #(#6#  #3#  1 #9=ITEM-POSITION (#7# ) INDEX
 #1# ) #5# ) :INHERITED-ACCESSORS '((#9#  . #3# ) (#8#  . #2# )) :DOCUMENTATION '#1# )
(PROCLAIM '(INLINE MAKE-LR1-ITEM))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-LR1-ITEM) '(LAMBDA (#2=PRODUCTION #3=POSITION 
#4=LOOKAHEAD) (BLOCK #1#  (SYSTEM:MAKE-STRUCTURE (EXTENSIONS:TRULY-THE SYMBOL 'LR1-ITEM) 
#2#  #3#  #4# ))))
(SYSTEM:FSET 'MAKE-LR1-ITEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 126) 
12109 '(PRODUCTION POSITION LOOKAHEAD) #1=NIL)
(SYSTEM:FSET 'LR1-ITEM-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 127) 12109 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * SYMBOL) ITEM-LOOKAHEAD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 128))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 129))
(SYSTEM:PUT 'ITEM-LOOKAHEAD 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'LR1-ITEM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 131))
(SYSTEM::%SET-FDEFINITION 'COPY-LR1-ITEM (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET 'PRINT-ITEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 133) 12342 
'(I S D) #1=NIL)
(PROCLAIM '(INLINE ITEM-DERIVES ITEM-SYMBOL ITEM-ACTION ITEM-DOT-RIGHT-P ITEM-DOT-RIGHT 
ITEM-DOT-SYMBOL ITEM-LR1-EQUAL-P ITEM-LR1-HASH-VALUE ITEM-EQUAL-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=ITEM-DERIVES) '(LAMBDA (#2=ITEM) (DECLARE (TYPE 
#2#  #2# )) (BLOCK #1#  (PRODUCTION-DERIVES (ITEM-PRODUCTION #2# )))))
(SYSTEM:FSET 'ITEM-DERIVES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 137) 12826 
'(ITEM) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ITEM-SYMBOL) '(LAMBDA (#2=ITEM) (DECLARE (TYPE 
#2#  #2# )) (BLOCK #1#  (PRODUCTION-SYMBOL (ITEM-PRODUCTION #2# )))))
(SYSTEM:FSET 'ITEM-SYMBOL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 138) 12930 
'(ITEM) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ITEM-ACTION) '(LAMBDA (#2=ITEM) (DECLARE (TYPE 
#2#  #2# )) (BLOCK #1#  (PRODUCTION-ACTION (ITEM-PRODUCTION #2# )))))
(SYSTEM:FSET 'ITEM-ACTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 139) 13032 
'(ITEM) #1=NIL)
(SYSTEM:FSET 'ITEM-ACTION-FORM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 140) 
13134 '(ITEM) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ITEM-LR1-EQUAL-P) '(LAMBDA (#2=I1 #3=I2) (DECLARE 
(TYPE LR1-ITEM #2#  #3# )) (BLOCK #1#  (OR (#4=EQ #2#  #3# ) (AND (#4#  (#5=ITEM-PRODUCTION 
#2# ) (#5#  #3# )) (= (#6=ITEM-POSITION #2# ) (#6#  #3# )) (#4#  (#7=ITEM-LOOKAHEAD 
#2# ) (#7#  #3# )))))))
(SYSTEM:FSET 'ITEM-LR1-EQUAL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 141) 
13246 '(I1 I2) "Equality predicate for LR(1) items.")
(SETF (SYSTEM:INLINE-EXPANSION '#1=ITEM-EQUAL-P) '(LAMBDA (#2=I1 #3=I2) (DECLARE 
(TYPE ITEM #2#  #3# )) (BLOCK #1#  (OR (#4=EQ #2#  #3# ) (AND (#4#  (#5=ITEM-PRODUCTION 
#2# ) (#5#  #3# )) (= (#6=ITEM-POSITION #2# ) (#6#  #3# )))))))
(SYSTEM:FSET 'ITEM-EQUAL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 142) 13540 
'(I1 I2) "Equality predicate for LR(0) items.")
(SETF (SYSTEM:INLINE-EXPANSION '#1=ITEM-LR1-HASH-VALUE) '(LAMBDA (#2=ITEM) (DECLARE 
(TYPE LR1-ITEM #2# )) (BLOCK #1#  (#3=CONS (PRODUCTION-ID (ITEM-PRODUCTION #2# )) 
(#3#  (ITEM-POSITION #2# ) (ITEM-LOOKAHEAD #2# ))))))
(SYSTEM:FSET 'ITEM-LR1-HASH-VALUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
143) 13770 '(ITEM) "Returns an object suitable for keying associations of LR1-items.")
(SYSTEM:FSET 'ITEM< (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 144) 14028 '(I1 
I2) "Total strict order on LR(0) items.")
(SYSTEM:FSET 'ITEM-SET-EQUAL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 145) 
14327 '(C1 C2) "Equality predicate for sorted sets of LR(0) items.")
(SETF (SYSTEM:INLINE-EXPANSION '#1=ITEM-DOT-RIGHT-P) '(LAMBDA (#2=ITEM) (DECLARE 
(TYPE #2#  #2# )) (BLOCK #1#  (= (ITEM-POSITION #2# ) (LENGTH (ITEM-DERIVES #2# ))))))
(SYSTEM:FSET 'ITEM-DOT-RIGHT-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 146) 
14657 '(ITEM) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=ITEM-DOT-SYMBOL) '(LAMBDA (#2=ITEM) (DECLARE (TYPE 
#2#  #2# )) (BLOCK #1#  (NTH (ITEM-POSITION #2# ) (ITEM-DERIVES #2# )))))
(SYSTEM:FSET 'ITEM-DOT-SYMBOL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 147) 
14775 '(ITEM) #1=NIL)
(SYSTEM:FSET 'ITEM-DOT-LEFT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 148) 
14885 '(ITEM) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION 'ITEM-DOT-RIGHT) '#1=NIL)
(SYSTEM:FSET 'ITEM-DOT-RIGHT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 149) 
14969 '(ITEM &OPTIONAL (N 0)) #1=NIL)
(SYSTEM:FSET 'ITEM-SHIFT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 150) 15146 
'(ITEM &OPTIONAL (N 1)) #1=NIL)
(SYSTEM:FSET 'LR1-ITEM-SHIFT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 151) 
15308 '(ITEM &OPTIONAL (N 1)) #1=NIL)
(SYSTEM:COMPILER-DEFSTRUCT 'KERNEL :CONC-NAME '#45? :DEFAULT-CONSTRUCTOR '#1=NIL 
:CONSTRUCTORS '((%MAKE-KERNEL (#2=ITEMS))) :COPIER 'COPY-KERNEL :PREDICATE '"KERNEL-P" 
#3=:PRINT-FUNCTION '(#3#  PRINT-KERNEL) :DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 ID 0 KERNEL-ID #1#  (OR NULL INDEX) #1# ) #6=#(#5#  #2#  1 KERNEL-ITEMS '#1#  #7=LIST
 #1# ) #8=#(#5#  GOTOS 2 KERNEL-GOTOS '#1#  #7#  #1# )) :SLOTS '(#4#  #6#  #8# ) 
:INHERITED-ACCESSORS '#1#  :DOCUMENTATION '#1# )
(PROCLAIM '(INLINE %MAKE-KERNEL))
(SETF (SYSTEM:INLINE-EXPANSION '#1=%MAKE-KERNEL) '(LAMBDA (#2=ITEMS) (BLOCK #1#  
(SYSTEM:MAKE-STRUCTURE (EXTENSIONS:TRULY-THE SYMBOL 'KERNEL) #3=NIL #2#  '#3# ))))
(SYSTEM:FSET '%MAKE-KERNEL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 152) 15517 
'(ITEMS) #1=NIL)
(SYSTEM:FSET 'KERNEL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 153) 15517 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * (OR NULL INDEX)) KERNEL-ID))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 154))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 155))
(SYSTEM:PUT 'KERNEL-ID 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 157))
(PROCLAIM '(FTYPE (FUNCTION * LIST) KERNEL-ITEMS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 159))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 160))
(SYSTEM:PUT 'KERNEL-ITEMS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 
'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 162))
(PROCLAIM '(FTYPE (FUNCTION * LIST) KERNEL-GOTOS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 164))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 165))
(SYSTEM:PUT 'KERNEL-GOTOS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 2 
'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 167))
(SYSTEM::%SET-FDEFINITION 'COPY-KERNEL (FUNCTION COPY-STRUCTURE))
(REQUIRE "PRINT-OBJECT")
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(SYSTEM::INSTANCE STREAM) :QUALIFIERS 
'#1=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'KERNEL 'T)) :FUNCTION 
(#2=SYSTEM::GET-FASL-FUNCTION #3=SYSTEM:*FASL-LOADER* 169) :FAST-FUNCTION (#2#  #3#  
170))
(SYSTEM:FSET 'PRINT-KERNEL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 171) 15735 
'(K S D) #1=NIL)
(SYSTEM:FSET 'MAKE-KERNEL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 176) 16015 
'(ITEMS &OPTIONAL KERNELS) #1=NIL)
(SYSTEM:FSET 'KERNEL-ITEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 177) 16276 
'(KERNEL) "The item in a singleton set of items.")
(DEFPARAMETER *ITEMS-CLOSURE-HASH-THRESHOLD* 20 "The number of elements when items-closure switches to using a hashtable.")
(PROCLAIM '(TYPE INDEX *ITEMS-CLOSURE-HASH-THRESHOLD*))
(DEFTYPE LR1-COLLECTION #1=NIL '(OR LIST HASH-TABLE))
(SYSTEM:FSET 'MAKE-LR1-COLLECTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
178) 16843 '(&OPTIONAL SAME-KIND-AS) #1=NIL)
(SYSTEM:FSET 'LR1-COLLECTION-EMPTY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
179) 16988 '(COLLECTION) #1=NIL)
(SYSTEM:FSET 'CLEAR-LR1-COLLECTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
180) 17186 '(COLLECTION) #1=NIL)
(SYSTEM:FSET 'MAKE-HASH-TABLE-FROM-LR1-LIST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
181) 17351 '(L) #1=NIL)
(PROCLAIM '(INLINE LR1-FIND))
(SETF (SYSTEM:INLINE-EXPANSION '#1=LR1-FIND) '(LAMBDA (#2=ITEM #3=COLLECTION) (#4=DECLARE 
(OPTIMIZE (SPEED 3) (SPACE 0))) (#4#  (#5=TYPE #2#  #2# ) (#5#  LR1-COLLECTION #3# )) 
(BLOCK #1#  (TYPECASE #3#  (LIST (FIND #2#  #3#  :TEST (FUNCTION ITEM-LR1-EQUAL-P))) 
(HASH-TABLE (GETHASH (ITEM-LR1-HASH-VALUE #2# ) #3# ))))))
(SYSTEM:FSET 'LR1-FIND (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 182) 17608 
'(ITEM COLLECTION) "Find an LR(1) item equal to ITEM in COLLECTION, or NIL.")
(SYSTEM:FSET 'MAP-LR1-COLLECTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
183) 17957 '(F COLLECTION) "Apply F to all elements of COLLECTION.")
(SYSTEM:FSET '#1=DO-LR1-COLLECTION (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 185)) 18308 '((VAR COLLECTION) &BODY BODY))
(PROCLAIM '(INLINE LR1-ADD))
(#1=SETF (SYSTEM:INLINE-EXPANSION '#2=LR1-ADD) '(LAMBDA (#3=ITEM #4=COLLECTION) (DECLARE 
(#5=TYPE LR1-ITEM #3# ) (#5#  LR1-COLLECTION #4# )) (BLOCK #2#  (TYPECASE #4#  (LIST 
(CONS #3#  #4# )) (HASH-TABLE (#1#  (GETHASH (ITEM-LR1-HASH-VALUE #3# ) #4# ) #3# ) 
#4# )))))
(SYSTEM:FSET 'LR1-ADD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 186) 18669 
'(ITEM COLLECTION) "Add ITEM to COLLECTION.")
(SYSTEM:FSET 'LR1-ADD-COLLECTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
187) 18954 '(ITEMS COLLECTION) "Add all the elements of ITEMS to COLLECTION.")
(SYSTEM:FSET 'ITEMS-CLOSURE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 189) 
19552 '(ITEMS GRAMMAR) "Compute the closure of a set of LR(1) items.")
(SYSTEM:COMPILER-DEFSTRUCT 'GOTO :CONC-NAME '#54? :DEFAULT-CONSTRUCTOR '#1=NIL :CONSTRUCTORS 
'((MAKE-GOTO (#2=SYMBOL #3=TARGET))) :COPIER 'COPY-GOTO :PREDICATE '"GOTO-P" :DIRECT-SLOTS 
'(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #2#  0 GOTO-SYMBOL #1#  #2#  #1# ) #6=#(#5# 
 #3#  1 GOTO-TARGET (REQUIRED-ARGUMENT) KERNEL #1# )) :SLOTS '(#4#  #6# ) :INHERITED-ACCESSORS 
'#1#  :DOCUMENTATION '#1# )
(PROCLAIM '(INLINE MAKE-GOTO))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-GOTO) '(LAMBDA (#2=SYMBOL #3=TARGET) (BLOCK 
#1#  (SYSTEM:MAKE-STRUCTURE (EXTENSIONS:TRULY-THE #2#  'GOTO) #2#  #3# ))))
(SYSTEM:FSET 'MAKE-GOTO (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 191) 20872 
'(SYMBOL TARGET) #1=NIL)
(SYSTEM:FSET 'GOTO-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 192) 20872 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * SYMBOL) GOTO-SYMBOL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 193))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 194))
(SYSTEM:PUT 'GOTO-SYMBOL 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 'GOTO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 196))
(PROCLAIM '(FTYPE (FUNCTION * KERNEL) GOTO-TARGET))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 198))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 199))
(SYSTEM:PUT 'GOTO-TARGET 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 'GOTO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 201))
(SYSTEM::%SET-FDEFINITION 'COPY-GOTO (FUNCTION COPY-STRUCTURE))
(PROCLAIM '(INLINE GOTO-EQUAL-P FIND-GOTO))
(SETF (SYSTEM:INLINE-EXPANSION '#1=GOTO-EQUAL-P) '(LAMBDA (#2=G1 #3=G2) (DECLARE 
(TYPE GOTO #2#  #3# )) (BLOCK #1#  (AND (#4=EQ (#5=GOTO-SYMBOL #2# ) (#5#  #3# )) 
(#4#  (#6=GOTO-TARGET #2# ) (#6#  #3# ))))))
(SYSTEM:FSET 'GOTO-EQUAL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 203) 21083 
'(G1 G2) #1=NIL)
(SETF (SYSTEM:INLINE-EXPANSION '#1=FIND-GOTO) '(LAMBDA (#2=KERNEL #3=SYMBOL) (DECLARE 
(TYPE #2#  #2# ) (#3#  #3# )) (BLOCK #1#  (FIND #3#  (KERNEL-GOTOS #2# ) :KEY (FUNCTION 
GOTO-SYMBOL)))))
(SYSTEM:FSET 'FIND-GOTO (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 204) 21287 
'(KERNEL SYMBOL) #1=NIL)
(SYSTEM:FSET 'COMPUTE-GOTO (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 205) 21428 
'(KERNEL SYMBOL GRAMMAR) "Compute the kernel of goto(KERNEL, SYMBOL)")
(SYSTEM:FSET 'COMPUTE-KERNELS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 206) 
22279 '(GRAMMAR) "Compute the set collections of LR(0) items for GRAMMAR.")
(SYSTEM:FSET 'COMPUTE-LOOKAHEADS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
209) 23795 '(KERNEL GRAMMAR &OPTIONAL PROPAGATE-ONLY) "Compute the LR(1) lookaheads for all items in KERNEL.
If PROPAGATE-ONLY is true, ignore spontaneous generation.")
(SYSTEM:FSET 'COMPUTE-ALL-LOOKAHEADS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
211) 24626 '(KERNELS GRAMMAR) "Compute the LR(1) lookaheads for all the collections in KERNELS.")
(SYSTEM:FSET 'PRINT-STATES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 213) 26741 
'(KERNELS LOOKAHEADS &OPTIONAL (STREAM *STANDARD-OUTPUT*)) #1=NIL)
(SYSTEM:FSET 'NUMBER-KERNELS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 220) 
27588 '(KERNELS) "Set a unique ID for all kernels in KERNELS.")
(SYSTEM:FSET 'PRINT-GOTO-GRAPH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 221) 
27808 '(KERNELS &OPTIONAL (STREAM *STANDARD-OUTPUT*)) "Print the goto graph defined by KERNELS.")
(SYSTEM:COMPILER-DEFSTRUCT 'ACTION :CONC-NAME '#59? :DEFAULT-CONSTRUCTOR '#1=NIL 
:CONSTRUCTORS '((#1#  #1# )) :COPIER 'COPY-ACTION :PREDICATE '"ACTION-P" #2=:PRINT-FUNCTION 
'(#2#  PRINT-ACTION) :DIRECT-SLOTS '#1#  :SLOTS '#1#  :INHERITED-ACCESSORS '#1#  
:DOCUMENTATION '#1# )
(SYSTEM:FSET 'ACTION-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 227) 28649 
'(SYSTEM::OBJECT) #1=NIL)
(SYSTEM::%SET-FDEFINITION 'COPY-ACTION (FUNCTION COPY-STRUCTURE))
(REQUIRE "PRINT-OBJECT")
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(SYSTEM::INSTANCE STREAM) :QUALIFIERS 
'#1=NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'ACTION 'T)) :FUNCTION 
(#2=SYSTEM::GET-FASL-FUNCTION #3=SYSTEM:*FASL-LOADER* 228) :FAST-FUNCTION (#2#  #3#  
229))
(SYSTEM:COMPILER-DEFSTRUCT 'ACCEPT-ACTION :CONC-NAME '#60? :DEFAULT-CONSTRUCTOR 'MAKE-ACCEPT-ACTION 
:COPIER 'COPY-ACCEPT-ACTION :INCLUDE '(ACTION) :PREDICATE '"ACCEPT-ACTION-P" :DIRECT-SLOTS 
'#1=NIL :SLOTS '#1#  :INHERITED-ACCESSORS '#1#  :DOCUMENTATION '#1# )
(SYSTEM:FSET 'MAKE-ACCEPT-ACTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
230) 28743 '(&KEY) #1=NIL)
(SYSTEM:FSET 'ACCEPT-ACTION-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 231) 
28743 '(SYSTEM::OBJECT) #1=NIL)
(SYSTEM::%SET-FDEFINITION 'COPY-ACCEPT-ACTION (FUNCTION COPY-STRUCTURE))
(SYSTEM:COMPILER-DEFSTRUCT 'REDUCE-ACTION :CONC-NAME '#61? :DEFAULT-CONSTRUCTOR '#1=NIL 
:CONSTRUCTORS '((MAKE-REDUCE-ACTION (#2=SYMBOL #3=LENGTH &KEY #4=ACTION #5=ACTION-FORM))) 
:COPIER 'COPY-REDUCE-ACTION :INCLUDE '(#4# ) :PREDICATE '"REDUCE-ACTION-P" :DIRECT-SLOTS 
'(#6=#(#7=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #2#  0 REDUCE-ACTION-SYMBOL (#8=REQUIRED-ARGUMENT)
 #2#  #1# ) #9=#(#7#  #3#  1 REDUCE-ACTION-LENGTH (#8# ) INDEX #1# ) #10=#(#7#  #4# 
 2 REDUCE-ACTION-ACTION (#11=FUNCTION LIST) #11#  #1# ) #12=#(#7#  #5#  3 REDUCE-ACTION-ACTION-FORM
 #1#  T #1# )) :SLOTS '(#6#  #9#  #10#  #12# ) :INHERITED-ACCESSORS '#1#  :DOCUMENTATION 
'#1# )
(PROCLAIM '(INLINE MAKE-REDUCE-ACTION))
(SETF (SYSTEM:INLINE-EXPANSION 'MAKE-REDUCE-ACTION) '#1=NIL)
(SYSTEM:FSET 'MAKE-REDUCE-ACTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
232) 28793 '(SYMBOL LENGTH &KEY (ACTION (FUNCTION LIST)) (ACTION-FORM #1=NIL)) #1# )
(SYSTEM:FSET 'REDUCE-ACTION-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 233) 
28793 '(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * SYMBOL) REDUCE-ACTION-SYMBOL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 234))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 235))
(SYSTEM:PUT 'REDUCE-ACTION-SYMBOL 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'REDUCE-ACTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 237))
(PROCLAIM '(FTYPE (FUNCTION * INDEX) REDUCE-ACTION-LENGTH))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 239))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 240))
(SYSTEM:PUT 'REDUCE-ACTION-LENGTH 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'REDUCE-ACTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 242))
(PROCLAIM '(FTYPE (#1=FUNCTION * #1# ) REDUCE-ACTION-ACTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 244))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 245))
(SYSTEM:PUT 'REDUCE-ACTION-ACTION 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'REDUCE-ACTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 247))
(PROCLAIM '(FTYPE (FUNCTION * T) REDUCE-ACTION-ACTION-FORM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 249))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 250))
(SYSTEM:PUT 'REDUCE-ACTION-ACTION-FORM 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 'REDUCE-ACTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 252))
(SYSTEM::%SET-FDEFINITION 'COPY-REDUCE-ACTION (FUNCTION COPY-STRUCTURE))
(SYSTEM:COMPILER-DEFSTRUCT 'SHIFT-ACTION :CONC-NAME '#70? :DEFAULT-CONSTRUCTOR '#1=NIL 
:CONSTRUCTORS '((MAKE-SHIFT-ACTION (#2=STATE))) :COPIER 'COPY-SHIFT-ACTION :INCLUDE 
'(ACTION) :PREDICATE '"SHIFT-ACTION-P" :DIRECT-SLOTS '(#3=#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 #2#  0 SHIFT-ACTION-STATE (REQUIRED-ARGUMENT) INDEX #1# )) :SLOTS '(#3# ) :INHERITED-ACCESSORS 
'#1#  :DOCUMENTATION '#1# )
(PROCLAIM '(INLINE MAKE-SHIFT-ACTION))
(SETF (SYSTEM:INLINE-EXPANSION '#1=MAKE-SHIFT-ACTION) '(LAMBDA (#2=STATE) (BLOCK 
#1#  (SYSTEM:MAKE-STRUCTURE (EXTENSIONS:TRULY-THE SYMBOL 'SHIFT-ACTION) #2# ))))
(SYSTEM:FSET 'MAKE-SHIFT-ACTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 254) 
29161 '(STATE) #1=NIL)
(SYSTEM:FSET 'SHIFT-ACTION-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 255) 
29161 '(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * INDEX) SHIFT-ACTION-STATE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 256))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 257))
(SYSTEM:PUT 'SHIFT-ACTION-STATE 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'SHIFT-ACTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 259))
(SYSTEM::%SET-FDEFINITION 'COPY-SHIFT-ACTION (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET 'ACTION-EQUAL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 261) 
29341 '(A1 A2) #1=NIL)
(SYSTEM:FSET 'PRINT-ACTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 262) 29846 
'(A S D) #1=NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 266))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 267))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONFLICT-WARNING 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 268))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 275))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONFLICT-SUMMARY-WARNING 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 276))
(SYSTEM:COMPILER-DEFSTRUCT 'PARSER :CONC-NAME '#73? :DEFAULT-CONSTRUCTOR '#1=NIL 
:CONSTRUCTORS '((%MAKE-PARSER (#2=STATES #3=GOTO #4=ACTION))) :COPIER 'COPY-PARSER 
:PREDICATE '"PARSER-P" :DIRECT-SLOTS '(#5=#(#6=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 #2#  0 PARSER-STATES (#7=REQUIRED-ARGUMENT) INDEX #1# ) #8=#(#6#  #3#  1 PARSER-GOTO
 (#7# ) #9=SIMPLE-VECTOR #1# ) #10=#(#6#  #4#  2 PARSER-ACTION (#7# ) #9#  #1# )) 
:SLOTS '(#5#  #8#  #10# ) :INHERITED-ACCESSORS '#1#  :DOCUMENTATION '#1# )
(PROCLAIM '(INLINE %MAKE-PARSER))
(SETF (SYSTEM:INLINE-EXPANSION '#1=%MAKE-PARSER) '(LAMBDA (#2=STATES #3=GOTO #4=ACTION) 
(BLOCK #1#  (SYSTEM:MAKE-STRUCTURE (EXTENSIONS:TRULY-THE SYMBOL 'PARSER) #2#  #3#  
#4# ))))
(SYSTEM:FSET '%MAKE-PARSER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 282) 31519 
'(STATES GOTO ACTION) #1=NIL)
(SYSTEM:FSET 'PARSER-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 283) 31519 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * INDEX) PARSER-STATES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 284))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 285))
(SYSTEM:PUT 'PARSER-STATES 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 0 
'PARSER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 287))
(PROCLAIM '(FTYPE (FUNCTION * SIMPLE-VECTOR) PARSER-GOTO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 289))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 290))
(SYSTEM:PUT 'PARSER-GOTO 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 'PARSER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 292))
(PROCLAIM '(FTYPE (FUNCTION * SIMPLE-VECTOR) PARSER-ACTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 294))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 295))
(SYSTEM:PUT 'PARSER-ACTION 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 2 
'PARSER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 297))
(SYSTEM::%SET-FDEFINITION 'COPY-PARSER (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET 'FIND-PRECEDENCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 299) 
31733 '(OP PRECEDENCE) "Return the tail of PRECEDENCE starting with the element containing OP.
PRECEDENCE is a list of elements of the form (KEYWORD . (op...)).")
(SYSTEM:FSET 'FIND-SINGLE-TERMINAL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
300) 32069 '(S GRAMMAR) "Return the only terminal in S, or NIL if none or multiple.")
(SYSTEM:FSET 'HANDLE-CONFLICT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 302) 
32421 '(A1 A2 GRAMMAR ACTION-PRODUCTIONS ID S &OPTIONAL MUFFLE-CONFLICTS) "Decide what to do with a conflict between A1 and A2 in state ID on symbol S.
Returns three actions: the chosen action, the number of new sr and rr.")
(SYSTEM:FSET 'COMPUTE-PARSING-TABLES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
303) 34439 '(KERNELS GRAMMAR &KEY MUFFLE-CONFLICTS) "Compute the parsing tables for grammar GRAMMAR and transitions KERNELS.
PRECEDENCE is as in FIND-PRECEDENCE.  MUFFLE-WARNINGS is one of NIL, T, :SOME
or a list of the form (sr rr).")
(SYSTEM:FSET 'MAKE-PARSER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 306) 39848 
'(GRAMMAR &KEY (DISCARD-MEMOS T) (MUFFLE-CONFLICTS #1=NIL) (PRINT-DERIVES-EPSILON 
#1# ) (PRINT-FIRST-TERMINALS #1# ) (PRINT-STATES #1# ) (PRINT-GOTO-GRAPH #1# ) (PRINT-LOOKAHEADS 
#1# )) "Returns a parser for the given grammar.
If MUFFLE-CONFLICTS is NIL, then a warning will be signaled for all conflicts.
If it is T, then no warnings will be signaled.  If it is a list of the form
(SR SS), then a warning will be signaled unless there are exactly SR
shift-reduce conflicts and SS shift-shift conflicts.")
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 307))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 308))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'YACC-PARSE-ERROR 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 309))
(SYSTEM:FSET 'PARSE-WITH-LEXER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 315) 
41736 '(LEXER PARSER) "Parse the stream of symbols provided by LEXER using PARSER.
LEXER is a function of no arguments returning a symbol and a semantic value,
and should return (VALUES NIL NIL) when the end of input is reached.
Handle YACC-PARSE-ERROR to provide custom error reporting.")
(SYSTEM:FSET 'PARSE-PRODUCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 320) 
44185 '(FORM) #1=NIL)
(SYSTEM:FSET 'PARSE-GRAMMAR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 321) 
44961 '(FORMS) #1=NIL)
(SYSTEM:FSET '#1=DEFINE-GRAMMAR (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 322)) 45907 '(NAME &BODY BODY))
(SYSTEM:FSET '#1=DEFINE-PARSER (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 323)) 46474 '(NAME &BODY BODY))
(MOP::ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(P &OPTIONAL ENV) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PRODUCTION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 324))
(MOP::ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(G &OPTIONAL ENV) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'GRAMMAR)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 326))
(MOP::ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(P &OPTIONAL ENV) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PARSER)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 328))
(MOP::ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(A &OPTIONAL ENV) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'ACCEPT-ACTION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 330))
(MOP::ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(A &OPTIONAL ENV) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'REDUCE-ACTION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 332))
(MOP::ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(A &OPTIONAL ENV) :QUALIFIERS '#1=NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SHIFT-ACTION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 334))
