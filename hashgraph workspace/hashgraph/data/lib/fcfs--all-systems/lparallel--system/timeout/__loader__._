"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/dists/quicklisp/software/lparallel-20131111-git/src/kernel/timeout.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:%%%%.TIMEOUT. #:G32391 #:G32392 #:G32393 #:G32439 #:G32484 #:G32536 #:G32580 #:G32632 #:G32677 #:WHOLE-32720 #:ENVIRONMENT-32721 #:LPARALLEL.KERNEL))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.timeout_tmpDPH33SC6"))
(SYSTEM:%IN-PACKAGE "LPARALLEL.KERNEL")
(SYSTEM:COMPILER-DEFSTRUCT '#1=TIMEOUT :CONC-NAME '#0? :DEFAULT-CONSTRUCTOR '#2=MAKE-TIMEOUT-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-TIMEOUT :PREDICATE '"TIMEOUT-P" :DIRECT-SLOTS 
'(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #6=CANCELED-RESULT 0 %%%%.TIMEOUT.CANCELED-RESULT
 (#7=ERROR #8="slot ~a in ~a not initialized" '#6#  '#1# ) #9=T #3# ) #10=#(#5#  #11=THREAD
 1 %%%%.TIMEOUT.THREAD (#7#  #8#  '#11#  '#1# ) #9#  #3# ) #12=#(#5#  LOCK 2 %%%%.TIMEOUT.LOCK
 (MAKE-LOCK) #9#  #3# )) :SLOTS '(#4#  #10#  #12# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION 
'#3# )
(SYSTEM:FSET 'MAKE-TIMEOUT-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
0) 1674 '(&KEY ((:CANCELED-RESULT #1?) (#1=ERROR #2="slot ~a in ~a not initialized" 
'CANCELED-RESULT '#3=TIMEOUT)) ((:THREAD #2?) (#1#  #2#  'THREAD '#3# )) ((:LOCK 
#3?) (MAKE-LOCK))) #4=NIL)
(SYSTEM:FSET 'TIMEOUT-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 1674 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.TIMEOUT.CANCELED-RESULT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3))
(SYSTEM:PUT '%%%%.TIMEOUT.CANCELED-RESULT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'TIMEOUT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.TIMEOUT.THREAD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 7))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8))
(SYSTEM:PUT '%%%%.TIMEOUT.THREAD 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'TIMEOUT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.TIMEOUT.LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 12))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13))
(SYSTEM:PUT '%%%%.TIMEOUT.LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'TIMEOUT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 15))
(SYSTEM::%SET-FDEFINITION 'COPY-TIMEOUT (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-TIMEOUT-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 17)) 1674 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(SYSTEM:FSET 'SUBMIT-TIMEOUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 18) 
1763 '(CHANNEL TIMEOUT-SECONDS TIMEOUT-RESULT) "Effectively equivalent to

  (submit-task channel (lambda () (sleep timeout-seconds) timeout-result))

The difference is that `submit-timeout' does not occupy a worker
thread.

A timeout object is returned, which may be passed to `cancel-timeout'.")
