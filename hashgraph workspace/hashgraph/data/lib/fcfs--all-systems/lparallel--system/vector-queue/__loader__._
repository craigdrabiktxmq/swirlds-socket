"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/dists/quicklisp/software/lparallel-20131111-git/src/vector-queue.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:%%%%.RAW-QUEUE. #:G22957 #:G22958 #:G22959 #:G22999 #:G23045 #:G23097 #:G23142 #:G23194 #:G23240 #:WHOLE-23283 #:ENVIRONMENT-23284 #:LPARALLEL.VECTOR-QUEUE #:G23308 #:G23309 #:G23338 #:G23339 #:%%%%.VECTOR-QUEUE. #:G23490 #:G23491 #:G23492 #:G23493 #:G23538 #:G23584 #:G23636 #:G23680 #:G23732 #:G23777 #:G23828 #:G23873 #:WHOLE-23917 #:ENVIRONMENT-23918 #:LPARALLEL.VECTOR-QUEUE #:G23942 #:G23943 #:G23972 #:G23973 #:WHOLE-24004 #:ENVIRONMENT-24005 #:WHOLE-24293 #:ENVIRONMENT-24294))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.vector_queue_tmpKM9S7QD7"))
(SYSTEM:%IN-PACKAGE "LPARALLEL.VECTOR-QUEUE")
(COMMON-LISP:IMPORT '(LPARALLEL.THREAD-UTIL::CONDITION-WAIT/TRACK-STATE LPARALLEL.THREAD-UTIL::DEFINE-LOCKING-FN 
LPARALLEL.THREAD-UTIL::DEFINE-SIMPLE-LOCKING-FN))
(DEFTYPE RAW-QUEUE-COUNT #1=NIL (SYSTEM::BACKQ-LIST 'INTEGER 0 ARRAY-DIMENSION-LIMIT))
(SYSTEM:COMPILER-DEFSTRUCT '#1=RAW-QUEUE :CONC-NAME '#0? :DEFAULT-CONSTRUCTOR '#2=MAKE-RAW-QUEUE-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-RAW-QUEUE :PREDICATE '"RAW-QUEUE-P" 
:DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #6=DATA #7=0 %%%%.RAW-QUEUE.DATA
 (ERROR "slot ~a in ~a not initialized" '#6#  '#1# ) SIMPLE-ARRAY #3# ) #8=#(#5# 
 START 1 %%%%.RAW-QUEUE.START #7#  #9=RAW-QUEUE-COUNT #3# ) #10=#(#5#  COUNT 2 %%%%.RAW-QUEUE.COUNT
 #7#  #9#  #3# )) :SLOTS '(#4#  #8#  #10# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION 
'#3# )
(SYSTEM:FSET 'MAKE-RAW-QUEUE-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
#1=0) 1939 '(&KEY ((:DATA #1?) (ERROR "slot ~a in ~a not initialized" 'DATA 'RAW-QUEUE)) 
((:START #2?) #1# ) ((:COUNT #3?) #1# )) #2=NIL)
(SYSTEM:FSET 'RAW-QUEUE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 1939 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * SIMPLE-ARRAY) %%%%.RAW-QUEUE.DATA))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3))
(SYSTEM:PUT '%%%%.RAW-QUEUE.DATA 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'RAW-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5))
(PROCLAIM '(FTYPE (FUNCTION * RAW-QUEUE-COUNT) %%%%.RAW-QUEUE.START))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 7))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8))
(SYSTEM:PUT '%%%%.RAW-QUEUE.START 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'RAW-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
(PROCLAIM '(FTYPE (FUNCTION * RAW-QUEUE-COUNT) %%%%.RAW-QUEUE.COUNT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 12))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13))
(SYSTEM:PUT '%%%%.RAW-QUEUE.COUNT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'RAW-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 15))
(SYSTEM::%SET-FDEFINITION 'COPY-RAW-QUEUE (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-RAW-QUEUE-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 17)) 1939 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (FUNCTION (RAW-QUEUE) SIMPLE-ARRAY) DATA))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 18))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 19))
(PROCLAIM '(FTYPE (FUNCTION (RAW-QUEUE) #1=RAW-QUEUE-COUNT) #1# ))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 21))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 22))
(SYSTEM:FSET 'MAKE-RAW-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 24) 
2169 '(CAPACITY) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (T RAW-QUEUE) (VALUES NULL &OPTIONAL)) PUSH-RAW-QUEUE))
(SYSTEM:FSET 'PUSH-RAW-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 25) 
2260 '(VALUE QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (RAW-QUEUE) (VALUES T BOOLEAN &OPTIONAL)) POP-RAW-QUEUE))
(SYSTEM:FSET 'POP-RAW-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 26) 2495 
'(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (RAW-QUEUE) (VALUES T BOOLEAN &OPTIONAL)) PEEK-RAW-QUEUE))
(SYSTEM:FSET 'PEEK-RAW-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 27) 
2905 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE RAW-QUEUE-EMPTY-P))
(PROCLAIM '(FTYPE (FUNCTION (RAW-QUEUE) (VALUES T &OPTIONAL)) RAW-QUEUE-EMPTY-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=RAW-QUEUE-EMPTY-P) '(LAMBDA (#2=QUEUE) (#3=DECLARE 
(OPTIMIZE (SPEED 3) (SAFETY #4=1) (DEBUG #4# ) (SPACE #5=0) (COMPILATION-SPEED #5# ))) 
(#3#  (TYPE RAW-QUEUE #2# )) (BLOCK #1#  (THE (VALUES T &OPTIONAL) (PROGN (ZEROP 
(RAW-QUEUE-COUNT #2# )))))))
(SYSTEM:FSET 'RAW-QUEUE-EMPTY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 28) 
3141 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE RAW-QUEUE-FULL-P))
(PROCLAIM '(FTYPE (FUNCTION (RAW-QUEUE) (VALUES T &OPTIONAL)) RAW-QUEUE-FULL-P))
(SETF (SYSTEM:INLINE-EXPANSION '#1=RAW-QUEUE-FULL-P) '(LAMBDA (#2=QUEUE) (#3=DECLARE 
(OPTIMIZE (SPEED 3) (SAFETY #4=1) (DEBUG #4# ) (SPACE #5=0) (COMPILATION-SPEED #5# ))) 
(#3#  (TYPE RAW-QUEUE #2# )) (BLOCK #1#  (THE (VALUES T &OPTIONAL) (PROGN (EQL (RAW-QUEUE-COUNT 
#2# ) (LENGTH (DATA #2# ))))))))
(SYSTEM:FSET 'RAW-QUEUE-FULL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 29) 
3268 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE RAW-QUEUE-CAPACITY))
(PROCLAIM '(FTYPE (FUNCTION (RAW-QUEUE) (VALUES RAW-QUEUE-COUNT &OPTIONAL)) RAW-QUEUE-CAPACITY))
(SETF (SYSTEM:INLINE-EXPANSION '#1=RAW-QUEUE-CAPACITY) '(LAMBDA (#2=QUEUE) (#3=DECLARE 
(OPTIMIZE (SPEED 3) (SAFETY #4=1) (DEBUG #4# ) (SPACE #5=0) (COMPILATION-SPEED #5# ))) 
(#3#  (TYPE RAW-QUEUE #2# )) (BLOCK #1#  (THE (VALUES RAW-QUEUE-COUNT &OPTIONAL) 
(PROGN (LENGTH (DATA #2# )))))))
(SYSTEM:FSET 'RAW-QUEUE-CAPACITY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
30) 3414 '(QUEUE) #1=NIL)
(SYSTEM:COMPILER-DEFSTRUCT '#1=VECTOR-QUEUE :CONC-NAME '#17? :DEFAULT-CONSTRUCTOR 
'#2=MAKE-VECTOR-QUEUE-INSTANCE :CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-VECTOR-QUEUE 
:PREDICATE '"VECTOR-QUEUE-P" :DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 #6=IMPL 0 %%%%.VECTOR-QUEUE.IMPL (ERROR "slot ~a in ~a not initialized" '#6#  '#1# )
 RAW-QUEUE #3# ) #7=#(#5#  LOCK 1 %%%%.VECTOR-QUEUE.LOCK (MAKE-LOCK) #8=T #3# ) #9=#(#5# 
 NOTIFY-PUSH 2 %%%%.VECTOR-QUEUE.NOTIFY-PUSH #3#  #8#  #3# ) #10=#(#5#  NOTIFY-POP
 3 %%%%.VECTOR-QUEUE.NOTIFY-POP #3#  #8#  #3# )) :SLOTS '(#4#  #7#  #9#  #10# ) :INHERITED-ACCESSORS 
'#3#  :DOCUMENTATION '#3# )
(SYSTEM:FSET 'MAKE-VECTOR-QUEUE-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
31) 3546 '(&KEY ((:IMPL #18?) (ERROR "slot ~a in ~a not initialized" 'IMPL 'VECTOR-QUEUE)) 
((:LOCK #19?) (MAKE-LOCK)) ((:NOTIFY-PUSH #20?) #1=NIL) ((:NOTIFY-POP #21?) #1# )) 
#1# )
(SYSTEM:FSET 'VECTOR-QUEUE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 32) 
3546 '(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * RAW-QUEUE) %%%%.VECTOR-QUEUE.IMPL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 33))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 34))
(SYSTEM:PUT '%%%%.VECTOR-QUEUE.IMPL 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'VECTOR-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 36))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.VECTOR-QUEUE.LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 38))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 39))
(SYSTEM:PUT '%%%%.VECTOR-QUEUE.LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'VECTOR-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 41))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.VECTOR-QUEUE.NOTIFY-PUSH))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 43))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 44))
(SYSTEM:PUT '%%%%.VECTOR-QUEUE.NOTIFY-PUSH 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'VECTOR-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 46))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.VECTOR-QUEUE.NOTIFY-POP))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 48))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 49))
(SYSTEM:PUT '%%%%.VECTOR-QUEUE.NOTIFY-POP 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 'VECTOR-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 51))
(SYSTEM::%SET-FDEFINITION 'COPY-VECTOR-QUEUE (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-VECTOR-QUEUE-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 53)) 3546 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) RAW-QUEUE) IMPL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 55))
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) T) LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 57))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 58))
(SYSTEM:FSET '%MAKE-VECTOR-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
60) 3739 '(CAPACITY) #1=NIL)
(SYSTEM:FSET '#1=WITH-LOCKED-VECTOR-QUEUE (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 61)) 3841 '(QUEUE &BODY BODY))
(PROCLAIM '(FTYPE (FUNCTION (T VECTOR-QUEUE) (VALUES NULL &OPTIONAL)) PUSH-VECTOR-QUEUE/NO-LOCK))
(SYSTEM:FSET 'PUSH-VECTOR-QUEUE/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
62) 3945 '(OBJECT QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (T VECTOR-QUEUE) (VALUES NULL &OPTIONAL)) PUSH-VECTOR-QUEUE))
(SYSTEM:FSET 'PUSH-VECTOR-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 63) 
3945 '(OBJECT QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) (VALUES T &OPTIONAL)) POP-VECTOR-QUEUE/NO-LOCK))
(SYSTEM:FSET 'POP-VECTOR-QUEUE/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
64) 4503 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) (VALUES T &OPTIONAL)) POP-VECTOR-QUEUE))
(SYSTEM:FSET 'POP-VECTOR-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 65) 
4503 '(QUEUE) #1=NIL)
(SYSTEM:FSET 'TRY-POP-VECTOR-QUEUE/NO-LOCK/TIMEOUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
66) 5052 '(QUEUE TIMEOUT) #1=NIL)
(SYSTEM:FSET 'TRY-POP-VECTOR-QUEUE/NO-LOCK/NO-TIMEOUT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 67) 5625 '(QUEUE) #1=NIL)
(SYSTEM:FSET 'TRY-POP-VECTOR-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
68) 6006 '(QUEUE TIMEOUT) #1=NIL)
(SYSTEM:FSET 'TRY-POP-VECTOR-QUEUE/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
69) 6511 '(QUEUE TIMEOUT) #1=NIL)
(SYSTEM:FSET '#1=DEFINE-QUEUE-FN (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 70)) 6733 '(NAME ARG-TYPES RAW RETURN-TYPE))
(PROCLAIM '(INLINE VECTOR-QUEUE-COUNT/NO-LOCK))
(SETF (SYSTEM:INLINE-EXPANSION '#1=VECTOR-QUEUE-COUNT/NO-LOCK) '(LAMBDA (#2=QUEUE) 
(DECLARE (OPTIMIZE (SPEED 3) (SAFETY #3=1) (DEBUG #3# ) (SPACE #4=0) (COMPILATION-SPEED 
#4# ))) (BLOCK #1#  (RAW-QUEUE-COUNT (IMPL #2# )))))
(SYSTEM:FSET 'VECTOR-QUEUE-COUNT/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
71) 6892 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) (VALUES RAW-QUEUE-COUNT &OPTIONAL)) VECTOR-QUEUE-COUNT))
(SYSTEM:FSET 'VECTOR-QUEUE-COUNT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
72) 6892 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE VECTOR-QUEUE-CAPACITY/NO-LOCK))
(SETF (SYSTEM:INLINE-EXPANSION '#1=VECTOR-QUEUE-CAPACITY/NO-LOCK) '(LAMBDA (#2=QUEUE) 
(DECLARE (OPTIMIZE (SPEED 3) (SAFETY #3=1) (DEBUG #3# ) (SPACE #4=0) (COMPILATION-SPEED 
#4# ))) (BLOCK #1#  (RAW-QUEUE-CAPACITY (IMPL #2# )))))
(SYSTEM:FSET 'VECTOR-QUEUE-CAPACITY/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
73) 6981 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) (VALUES RAW-QUEUE-COUNT &OPTIONAL)) VECTOR-QUEUE-CAPACITY))
(SYSTEM:FSET 'VECTOR-QUEUE-CAPACITY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
74) 6981 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE VECTOR-QUEUE-EMPTY-P/NO-LOCK))
(SETF (SYSTEM:INLINE-EXPANSION '#1=VECTOR-QUEUE-EMPTY-P/NO-LOCK) '(LAMBDA (#2=QUEUE) 
(DECLARE (OPTIMIZE (SPEED 3) (SAFETY #3=1) (DEBUG #3# ) (SPACE #4=0) (COMPILATION-SPEED 
#4# ))) (BLOCK #1#  (RAW-QUEUE-EMPTY-P (IMPL #2# )))))
(SYSTEM:FSET 'VECTOR-QUEUE-EMPTY-P/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
75) 7076 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) (VALUES BOOLEAN &OPTIONAL)) VECTOR-QUEUE-EMPTY-P))
(SYSTEM:FSET 'VECTOR-QUEUE-EMPTY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
76) 7076 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE VECTOR-QUEUE-FULL-P/NO-LOCK))
(SETF (SYSTEM:INLINE-EXPANSION '#1=VECTOR-QUEUE-FULL-P/NO-LOCK) '(LAMBDA (#2=QUEUE) 
(DECLARE (OPTIMIZE (SPEED 3) (SAFETY #3=1) (DEBUG #3# ) (SPACE #4=0) (COMPILATION-SPEED 
#4# ))) (BLOCK #1#  (RAW-QUEUE-FULL-P (IMPL #2# )))))
(SYSTEM:FSET 'VECTOR-QUEUE-FULL-P/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
77) 7161 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) (VALUES BOOLEAN &OPTIONAL)) VECTOR-QUEUE-FULL-P))
(SYSTEM:FSET 'VECTOR-QUEUE-FULL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
78) 7161 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE PEEK-VECTOR-QUEUE/NO-LOCK))
(SETF (SYSTEM:INLINE-EXPANSION '#1=PEEK-VECTOR-QUEUE/NO-LOCK) '(LAMBDA (#2=QUEUE) 
(DECLARE (OPTIMIZE (SPEED 3) (SAFETY #3=1) (DEBUG #3# ) (SPACE #4=0) (COMPILATION-SPEED 
#4# ))) (BLOCK #1#  (PEEK-RAW-QUEUE (IMPL #2# )))))
(SYSTEM:FSET 'PEEK-VECTOR-QUEUE/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
79) 7244 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (VECTOR-QUEUE) (VALUES T BOOLEAN &OPTIONAL)) PEEK-VECTOR-QUEUE))
(SYSTEM:FSET 'PEEK-VECTOR-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 80) 
7244 '(QUEUE) #1=NIL)
(SYSTEM:FSET 'MAKE-VECTOR-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 81) 
7334 '(CAPACITY &KEY INITIAL-CONTENTS) #1=NIL)
