"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/dists/quicklisp/software/lparallel-20131111-git/src/promise.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:%%%%.PROMISE-BASE. #:G33054 #:G33055 #:G33091 #:G33136 #:G33188 #:G33232 #:WHOLE-33276 #:ENVIRONMENT-33277 #:LPARALLEL.PROMISE #:G33301 #:G33302 #:%%%%.%PROMISE. #:G33323 #:G33324 #:G33325 #:G33326 #:G33366 #:G33411 #:G33463 #:G33507 #:G33559 #:G33604 #:G33655 #:G33701 #:WHOLE-33745 #:ENVIRONMENT-33746 #:LPARALLEL.PROMISE #:%%%%.PLAN. #:G33762 #:G33763 #:G33764 #:G33807 #:G33852 #:G33904 #:G33948 #:G34000 #:G34046 #:WHOLE-34089 #:ENVIRONMENT-34090 #:LPARALLEL.PROMISE #:G34114 #:G34115 #:%%%%.%FUTURE. #:G34136 #:G34137 #:G34138 #:G34139 #:G34185 #:G34230 #:G34282 #:G34326 #:G34378 #:G34424 #:G34475 #:G34521 #:WHOLE-34565 #:ENVIRONMENT-34566 #:LPARALLEL.PROMISE #:%%%%.%DELAY. #:G34582 #:G34583 #:G34584 #:G34628 #:G34673 #:G34725 #:G34769 #:G34821 #:G34867 #:WHOLE-34910 #:ENVIRONMENT-34911 #:LPARALLEL.PROMISE #:%%%%.%CHAIN. #:G34927 #:G34963 #:G35008 #:WHOLE-35052 #:ENVIRONMENT-35053 #:LPARALLEL.PROMISE #:G35077 #:G35078 #:WHOLE-35099 #:ENVIRONMENT-35100 #:WHOLE-35116 #:ENVIRONMENT-35117 #:WHOLE-35127 #:ENVIRONMENT-35128 #:WHOLE-35313 #:ENVIRONMENT-35314 #:WHOLE-35455 #:ENVIRONMENT-35456 #:WHOLE-35566 #:ENVIRONMENT-35567 #:WHOLE-35577 #:ENVIRONMENT-35578 #:WHOLE-35624 #:ENVIRONMENT-35625 #:G35672))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.promise_tmpQKY53RCY"))
(SYSTEM:%IN-PACKAGE "LPARALLEL.PROMISE")
(COMMON-LISP:IMPORT '(LPARALLEL.KERNEL::UNWRAP-RESULT LPARALLEL.KERNEL::TASK-LAMBDA 
LPARALLEL.KERNEL::MAKE-TASK LPARALLEL.KERNEL::TASK LPARALLEL.KERNEL::CALL-WITH-TASK-HANDLER 
LPARALLEL.KERNEL::SUBMIT-RAW-TASK LPARALLEL.KERNEL::WRAP-ERROR LPARALLEL.KERNEL::WRAPPED-ERROR))
(DEFCONSTANT +NO-RESULT+ 'NO-RESULT)
(SYSTEM:COMPILER-DEFSTRUCT 'PROMISE-BASE :CONC-NAME '#0? :DEFAULT-CONSTRUCTOR '#1=MAKE-PROMISE-BASE-INSTANCE 
:CONSTRUCTORS '((#1#  #2=NIL)) :COPIER 'COPY-PROMISE-BASE :PREDICATE '"PROMISE-BASE-P" 
:DIRECT-SLOTS '(#3=#(#4=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION RESULT 0 %%%%.PROMISE-BASE.RESULT
 +NO-RESULT+ #5=T #2# ) #6=#(#4#  LOCK 1 %%%%.PROMISE-BASE.LOCK (MAKE-LOCK) #5#  #2# )) 
:SLOTS '(#3#  #6# ) :INHERITED-ACCESSORS '#2#  :DOCUMENTATION '#2# )
(SYSTEM:FSET 'MAKE-PROMISE-BASE-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
0) 2306 '(&KEY ((:RESULT #1?) +NO-RESULT+) ((:LOCK #2?) (MAKE-LOCK))) #1=NIL)
(SYSTEM:FSET 'PROMISE-BASE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 2306 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.PROMISE-BASE.RESULT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3))
(SYSTEM:PUT '%%%%.PROMISE-BASE.RESULT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'PROMISE-BASE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.PROMISE-BASE.LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 7))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8))
(SYSTEM:PUT '%%%%.PROMISE-BASE.LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'PROMISE-BASE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
(SYSTEM::%SET-FDEFINITION 'COPY-PROMISE-BASE (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-PROMISE-BASE-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 12)) 2306 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (FUNCTION (PROMISE-BASE) T) RESULT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 14))
(SYSTEM:COMPILER-DEFSTRUCT '%PROMISE :CONC-NAME '#12? :DEFAULT-CONSTRUCTOR '#1=MAKE-%PROMISE-INSTANCE 
:CONSTRUCTORS '((#1#  #2=NIL)) :COPIER 'COPY-%PROMISE :INCLUDE '(PROMISE-BASE) :PREDICATE 
'"%PROMISE-P" :DIRECT-SLOTS '(#3=#(#4=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION CVAR 2 %%%%.%PROMISE.CVAR
 #2#  #5=T #2# ) #6=#(#4#  AVAILABLEP 3 %%%%.%PROMISE.AVAILABLEP #5#  BOOLEAN #2# )) 
:SLOTS '(#(#4#  #7=RESULT 0 %%%%.%PROMISE.RESULT +NO-RESULT+ #5#  #2# ) #(#4#  #8=LOCK
 1 %%%%.%PROMISE.LOCK (MAKE-LOCK) #5#  #2# ) #3#  #6# ) :INHERITED-ACCESSORS '((%%%%.PROMISE-BASE.LOCK . #8# ) 
(%%%%.PROMISE-BASE.RESULT . #7# )) :DOCUMENTATION '#2# )
(SYSTEM:FSET 'MAKE-%PROMISE-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
16) 2433 '(&KEY ((:RESULT #13?) +NO-RESULT+) ((:LOCK #14?) (MAKE-LOCK)) ((:CVAR #15?) 
#1=NIL) ((:AVAILABLEP #16?) T)) #1# )
(SYSTEM:FSET '%PROMISE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 17) 2433 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.%PROMISE.RESULT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 18))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 19))
(SYSTEM:PUT '%%%%.%PROMISE.RESULT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 '%PROMISE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 21))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.%PROMISE.LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 23))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 24))
(SYSTEM:PUT '%%%%.%PROMISE.LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 '%PROMISE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 26))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.%PROMISE.CVAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 28))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 29))
(SYSTEM:PUT '%%%%.%PROMISE.CVAR 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 '%PROMISE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 31))
(PROCLAIM '(FTYPE (FUNCTION * BOOLEAN) %%%%.%PROMISE.AVAILABLEP))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 33))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 34))
(SYSTEM:PUT '%%%%.%PROMISE.AVAILABLEP 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 '%PROMISE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 36))
(SYSTEM::%SET-FDEFINITION 'COPY-%PROMISE (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-%PROMISE-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 38)) 2433 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(SYSTEM:COMPILER-DEFSTRUCT '#1=PLAN :CONC-NAME '#28? :DEFAULT-CONSTRUCTOR '#2=MAKE-PLAN-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-PLAN :INCLUDE '(PROMISE-BASE) :PREDICATE 
'"PLAN-P" :DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #6=FN 2 %%%%.PLAN.FN
 (ERROR "slot ~a in ~a not initialized" '#6#  '#1# ) (OR NULL FUNCTION) #3# )) :SLOTS 
'(#(#5#  #7=RESULT 0 %%%%.PLAN.RESULT +NO-RESULT+ #8=T #3# ) #(#5#  #9=LOCK 1 %%%%.PLAN.LOCK
 (MAKE-LOCK) #8#  #3# ) #4# ) :INHERITED-ACCESSORS '((%%%%.PROMISE-BASE.LOCK . #9# ) 
(%%%%.PROMISE-BASE.RESULT . #7# )) :DOCUMENTATION '#3# )
(SYSTEM:FSET 'MAKE-PLAN-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
39) 2542 '(&KEY ((:RESULT #29?) +NO-RESULT+) ((:LOCK #30?) (MAKE-LOCK)) ((:FN #31?) 
(ERROR "slot ~a in ~a not initialized" 'FN 'PLAN))) #1=NIL)
(SYSTEM:FSET 'PLAN-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 40) 2542 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.PLAN.RESULT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 41))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 42))
(SYSTEM:PUT '%%%%.PLAN.RESULT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'PLAN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 44))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.PLAN.LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 46))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 47))
(SYSTEM:PUT '%%%%.PLAN.LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'PLAN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 49))
(PROCLAIM '(FTYPE (#1=FUNCTION * (OR NULL #1# )) %%%%.PLAN.FN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 51))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 52))
(SYSTEM:PUT '%%%%.PLAN.FN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 2 
'PLAN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54))
(SYSTEM::%SET-FDEFINITION 'COPY-PLAN (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-PLAN-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 56)) 2542 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (#1=FUNCTION (PLAN) (OR NULL #1# )) PLAN-FN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 57))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 58))
(SYSTEM:COMPILER-DEFSTRUCT '%FUTURE :CONC-NAME '#43? :DEFAULT-CONSTRUCTOR '#1=MAKE-%FUTURE-INSTANCE 
:CONSTRUCTORS '((#1#  #2=NIL)) :COPIER 'COPY-%FUTURE :INCLUDE '(#3=PLAN) :PREDICATE 
'"%FUTURE-P" :DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION CANCELEDP
 3 %%%%.%FUTURE.CANCELEDP #2#  BOOLEAN #2# )) :SLOTS '(#(#5#  #6=RESULT 0 %%%%.%FUTURE.RESULT
 +NO-RESULT+ #7=T #2# ) #(#5#  #8=LOCK 1 %%%%.%FUTURE.LOCK (MAKE-LOCK) #7#  #2# ) 
#(#5#  #9=FN 2 %%%%.%FUTURE.FN (ERROR "slot ~a in ~a not initialized" '#9#  '#3# )
 (OR NULL FUNCTION) #2# ) #4# ) :INHERITED-ACCESSORS '((%%%%.PLAN.FN . #9# ) (%%%%.PROMISE-BASE.LOCK . #8# ) 
(%%%%.PROMISE-BASE.RESULT . #6# )) :DOCUMENTATION '#2# )
(SYSTEM:FSET 'MAKE-%FUTURE-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
60) 2745 '(&KEY ((:RESULT #44?) +NO-RESULT+) ((:LOCK #45?) (MAKE-LOCK)) ((:FN #46?) 
(ERROR "slot ~a in ~a not initialized" 'FN 'PLAN)) ((:CANCELEDP #47?) #1=NIL)) #1# )
(SYSTEM:FSET '%FUTURE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 61) 2745 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.%FUTURE.RESULT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 62))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 63))
(SYSTEM:PUT '%%%%.%FUTURE.RESULT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 '%FUTURE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 65))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.%FUTURE.LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 67))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 68))
(SYSTEM:PUT '%%%%.%FUTURE.LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 '%FUTURE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 70))
(PROCLAIM '(FTYPE (#1=FUNCTION * (OR NULL #1# )) %%%%.%FUTURE.FN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 72))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 73))
(SYSTEM:PUT '%%%%.%FUTURE.FN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 '%FUTURE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 75))
(PROCLAIM '(FTYPE (FUNCTION * BOOLEAN) %%%%.%FUTURE.CANCELEDP))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 77))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 78))
(SYSTEM:PUT '%%%%.%FUTURE.CANCELEDP 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 '%FUTURE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 80))
(SYSTEM::%SET-FDEFINITION 'COPY-%FUTURE (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-%FUTURE-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 82)) 2745 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(SYSTEM:COMPILER-DEFSTRUCT '%DELAY :CONC-NAME '#59? :DEFAULT-CONSTRUCTOR '#1=MAKE-%DELAY-INSTANCE 
:CONSTRUCTORS '((#1#  #2=NIL)) :COPIER 'COPY-%DELAY :INCLUDE '(#3=PLAN) :PREDICATE 
'"%DELAY-P" :DIRECT-SLOTS '#2#  :SLOTS '(#(#4=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #5=RESULT
 0 %%%%.%DELAY.RESULT +NO-RESULT+ #6=T #2# ) #(#4#  #7=LOCK 1 %%%%.%DELAY.LOCK (MAKE-LOCK)
 #6#  #2# ) #(#4#  #8=FN 2 %%%%.%DELAY.FN (ERROR "slot ~a in ~a not initialized" 
'#8#  '#3# ) (OR NULL FUNCTION) #2# )) :INHERITED-ACCESSORS '((%%%%.PLAN.FN . #8# ) 
(%%%%.PROMISE-BASE.LOCK . #7# ) (%%%%.PROMISE-BASE.RESULT . #5# )) :DOCUMENTATION 
'#2# )
(SYSTEM:FSET 'MAKE-%DELAY-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
83) 2816 '(&KEY ((:RESULT #60?) +NO-RESULT+) ((:LOCK #61?) (MAKE-LOCK)) ((:FN #62?) 
(ERROR "slot ~a in ~a not initialized" 'FN 'PLAN))) #1=NIL)
(SYSTEM:FSET '%DELAY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 84) 2816 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.%DELAY.RESULT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 85))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 86))
(SYSTEM:PUT '%%%%.%DELAY.RESULT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 '%DELAY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 88))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.%DELAY.LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 90))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 91))
(SYSTEM:PUT '%%%%.%DELAY.LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 '%DELAY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 93))
(PROCLAIM '(FTYPE (#1=FUNCTION * (OR NULL #1# )) %%%%.%DELAY.FN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 95))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 96))
(SYSTEM:PUT '%%%%.%DELAY.FN 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 '%DELAY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 98))
(SYSTEM::%SET-FDEFINITION 'COPY-%DELAY (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-%DELAY-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 100)) 2816 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE 
&BODY LPARALLEL.UTIL::BODY))
(SYSTEM:COMPILER-DEFSTRUCT '#1=%CHAIN :CONC-NAME '#72? :DEFAULT-CONSTRUCTOR '#2=MAKE-%CHAIN-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-%CHAIN :PREDICATE '"%CHAIN-P" :DIRECT-SLOTS 
'(#4=#(SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #5=OBJECT 0 %%%%.%CHAIN.OBJECT (ERROR "slot ~a in ~a not initialized" 
'#5#  '#1# ) T #3# )) :SLOTS '(#4# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION '#3# )
(SYSTEM:FSET 'MAKE-%CHAIN-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
101) 2845 '(&KEY ((:OBJECT #73?) (ERROR "slot ~a in ~a not initialized" 'OBJECT '%CHAIN))) 
#1=NIL)
(SYSTEM:FSET '%CHAIN-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 102) 2845 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.%CHAIN.OBJECT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 103))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 104))
(SYSTEM:PUT '%%%%.%CHAIN.OBJECT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 '%CHAIN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 106))
(SYSTEM::%SET-FDEFINITION 'COPY-%CHAIN (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-%CHAIN-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 108)) 2845 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE 
&BODY LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (FUNCTION (%CHAIN) T) CHAIN-OBJECT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 109))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 110))
(SYSTEM:FSET '#1=WITH-LOCK-OPERATION (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 112)) 2901 '(OPERATION PROMISE &BODY BODY))
(SYSTEM:FSET '#1=WITH-UNFULFILLED/NO-WAIT (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 113)) 3147 '(PROMISE &BODY BODY))
(SYSTEM:FSET '#1=WITH-UNFULFILLED/WAIT (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 114)) 3279 '(PROMISE &BODY BODY))
(SYSTEM:FSET 'PROMISE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 115) 3405 '#1=NIL 
"Create a promise. A promise is a receptacle for a result which is
unknown at the time it is created.")
(SYSTEM:FSET 'FULFILL-PROMISE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 116) 
3571 '(PROMISE CLIENT-FN) #1=NIL)
(SYSTEM:FSET 'FORCE-PROMISE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 117) 
4100 '(PROMISE) #1=NIL)
(PROCLAIM '(INLINE FULFILL-PLAN/VALUES))
(#1=SETF (SYSTEM:INLINE-EXPANSION '#2=FULFILL-PLAN/VALUES) '(LAMBDA (#3=PLAN #4=VALUES) 
(BLOCK #2#  (WITH-PLAN-SLOTS (#5=RESULT #6=FN) #3#  (#1#  #5#  #4#  #6#  #7=NIL)))))
(SYSTEM:FSET 'FULFILL-PLAN/VALUES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
118) 4343 '(PLAN VALUES) #1=NIL)
(PROCLAIM '(INLINE FULFILL-PLAN/CALL))
(SETF (SYSTEM:INLINE-EXPANSION '#1=FULFILL-PLAN/CALL) '(LAMBDA (#2=PLAN) (BLOCK #1#  
(FULFILL-PLAN/VALUES #2#  (MULTIPLE-VALUE-LIST (CALL-WITH-TASK-HANDLER (PLAN-FN #2# )))))))
(SYSTEM:FSET 'FULFILL-PLAN/CALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 119) 
4483 '(PLAN) #1=NIL)
(SYSTEM:FSET 'FULFILL-PLAN/ERROR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
120) 4618 '(PLAN ERR) #1=NIL)
(SYSTEM:FSET '#1=DELAY (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
121)) 4710 '(&BODY BODY))
(SYSTEM:FSET 'FULFILL-DELAY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 122) 
4894 '(DELAY CLIENT-FN) #1=NIL)
(SYSTEM:FSET 'FORCE-DELAY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 123) 5050 
'(DELAY) #1=NIL)
(SYSTEM:FSET 'FULFILL-FUTURE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 124) 
5189 '(FUTURE CLIENT-FN) #1=NIL)
(SYSTEM:FSET 'FORCE-FUTURE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 125) 5499 
'(FUTURE) #1=NIL)
(SYSTEM:FSET '#1=WITH-UNFULFILLED-FUTURE/NO-WAIT (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 126)) 5690 '(FUTURE &BODY BODY))
(PROCLAIM '(FTYPE (FUNCTION (%FUTURE) (VALUES TASK &OPTIONAL)) MAKE-FUTURE-TASK))
(SYSTEM:FSET 'MAKE-FUTURE-TASK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 127) 
6047 '(FUTURE) #1=NIL)
(PROCLAIM '(FTYPE (#1=FUNCTION (#1# ) (VALUES %FUTURE &OPTIONAL)) MAKE-FUTURE))
(SYSTEM:FSET 'MAKE-FUTURE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 129) 6418 
'(FN) #1=NIL)
(SYSTEM:FSET '#1=FUTURE (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
130)) 6648 '(&BODY BODY))
(SYSTEM:FSET '#1=SPECULATE (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
131)) 6822 '(&BODY BODY))
(SYSTEM:FSET 'CHAIN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 132) 6994 '(OBJECT) 
"Create a chain. A chain links objects together by relaying `force'
and `fulfilledp' calls.")
(SYSTEM:FSET 'FULFILL-OBJECT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 133) 
7165 '(OBJECT CLIENT-FN) #1=NIL)
(SYSTEM:FSET '#1=FULFILL (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
134)) 7496 '(OBJECT &BODY BODY))
(SYSTEM:FSET 'FULFILLEDP (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 135) 8152 
'(OBJECT) "If `object' is a promise, return a boolean indicating whether the
promise is fulfilled.

If `object' is a chain, call `fulfilledp' on the chained object.

If `object' is not a promise and not a chain, return true.")
(SYSTEM:FSET 'REPLACE-ERROR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 136) 
8585 '(PROMISE) #1=NIL)
(SYSTEM:FSET 'FORCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 141) 9266 '(OBJECT) 
"If `object' is a promise and the promise is fulfilled, return the
fulfilled value (possibly multiple values). If the promise is
unfulfilled then the call blocks until the promise is fulfilled.

If `object' is a chain, call `force' on the chained object.

If `object' is not a promise and not a chain, return the identical
object passed.

Note if `force' is called on an unfulfilled future then the future is
fulfilled by the caller of `force'.")
