"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/dists/quicklisp/software/lparallel-20131111-git/src/cons-queue.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:%%%%.CONS-QUEUE. #:G22066 #:G22067 #:G22068 #:G22111 #:G22157 #:G22209 #:G22253 #:G22305 #:G22350 #:WHOLE-22393 #:ENVIRONMENT-22394 #:LPARALLEL.CONS-QUEUE #:G22418 #:G22419 #:G22448 #:G22449 #:WHOLE-22480 #:ENVIRONMENT-22481 #:WHOLE-22711 #:ENVIRONMENT-22712))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.cons_queue_tmp2FH66JBS"))
(SYSTEM:%IN-PACKAGE "LPARALLEL.CONS-QUEUE")
(COMMON-LISP:IMPORT '(LPARALLEL.THREAD-UTIL::CONDITION-WAIT/TRACK-STATE LPARALLEL.THREAD-UTIL::DEFINE-LOCKING-FN 
LPARALLEL.THREAD-UTIL::DEFINE-SIMPLE-LOCKING-FN))
(SYSTEM:COMPILER-DEFSTRUCT '#1=CONS-QUEUE :CONC-NAME '#0? :DEFAULT-CONSTRUCTOR '#2=MAKE-CONS-QUEUE-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-CONS-QUEUE :PREDICATE '"CONS-QUEUE-P" 
:DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #6=IMPL 0 %%%%.CONS-QUEUE.IMPL
 (ERROR "slot ~a in ~a not initialized" '#6#  '#1# ) RAW-QUEUE #3# ) #7=#(#5#  LOCK
 1 %%%%.CONS-QUEUE.LOCK (MAKE-LOCK) #8=T #3# ) #9=#(#5#  CVAR 2 %%%%.CONS-QUEUE.CVAR
 #3#  #8#  #3# )) :SLOTS '(#4#  #7#  #9# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION 
'#3# )
(SYSTEM:FSET 'MAKE-CONS-QUEUE-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
0) 1855 '(&KEY ((:IMPL #1?) (ERROR "slot ~a in ~a not initialized" 'IMPL 'CONS-QUEUE)) 
((:LOCK #2?) (MAKE-LOCK)) ((:CVAR #3?) #1=NIL)) #1# )
(SYSTEM:FSET 'CONS-QUEUE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 1855 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * RAW-QUEUE) %%%%.CONS-QUEUE.IMPL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3))
(SYSTEM:PUT '%%%%.CONS-QUEUE.IMPL 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'CONS-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.CONS-QUEUE.LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 7))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8))
(SYSTEM:PUT '%%%%.CONS-QUEUE.LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'CONS-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.CONS-QUEUE.CVAR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 12))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13))
(SYSTEM:PUT '%%%%.CONS-QUEUE.CVAR 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'CONS-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 15))
(SYSTEM::%SET-FDEFINITION 'COPY-CONS-QUEUE (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-CONS-QUEUE-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 17)) 1855 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (FUNCTION (CONS-QUEUE) RAW-QUEUE) IMPL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 18))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 19))
(PROCLAIM '(FTYPE (FUNCTION (CONS-QUEUE) T) LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 21))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 22))
(SYSTEM:FSET '%MAKE-CONS-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 24) 
2024 '#1=NIL #1# )
(SYSTEM:FSET '#1=WITH-LOCKED-CONS-QUEUE (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 25)) 2105 '(QUEUE &BODY BODY))
(PROCLAIM '(FTYPE (FUNCTION (T CONS-QUEUE) (VALUES NULL &OPTIONAL)) PUSH-CONS-QUEUE/NO-LOCK))
(SYSTEM:FSET 'PUSH-CONS-QUEUE/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
26) 2207 '(OBJECT QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (T CONS-QUEUE) (VALUES NULL &OPTIONAL)) PUSH-CONS-QUEUE))
(SYSTEM:FSET 'PUSH-CONS-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 27) 
2207 '(OBJECT QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (CONS-QUEUE) (VALUES T &OPTIONAL)) POP-CONS-QUEUE/NO-LOCK))
(SYSTEM:FSET 'POP-CONS-QUEUE/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
28) 2413 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (CONS-QUEUE) (VALUES T &OPTIONAL)) POP-CONS-QUEUE))
(SYSTEM:FSET 'POP-CONS-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 29) 
2413 '(QUEUE) #1=NIL)
(SYSTEM:FSET 'TRY-POP-CONS-QUEUE/NO-LOCK/TIMEOUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
30) 2772 '(QUEUE TIMEOUT) #1=NIL)
(SYSTEM:FSET 'TRY-POP-CONS-QUEUE/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
31) 3228 '(QUEUE TIMEOUT) #1=NIL)
(SYSTEM:FSET 'TRY-POP-CONS-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
32) 3427 '(QUEUE TIMEOUT) #1=NIL)
(SYSTEM:FSET '#1=DEFINE-QUEUE-FN (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 33)) 3885 '(NAME ARG-TYPES RAW RETURN-TYPE))
(PROCLAIM '(INLINE CONS-QUEUE-COUNT/NO-LOCK))
(SETF (SYSTEM:INLINE-EXPANSION '#1=CONS-QUEUE-COUNT/NO-LOCK) '(LAMBDA (#2=QUEUE) 
(DECLARE (OPTIMIZE (SPEED 3) (SAFETY #3=1) (DEBUG #3# ) (SPACE #4=0) (COMPILATION-SPEED 
#4# ))) (BLOCK #1#  (RAW-QUEUE-COUNT (IMPL #2# )))))
(SYSTEM:FSET 'CONS-QUEUE-COUNT/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
34) 4044 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (CONS-QUEUE) (VALUES RAW-QUEUE-COUNT &OPTIONAL)) CONS-QUEUE-COUNT))
(SYSTEM:FSET 'CONS-QUEUE-COUNT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 35) 
4044 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE CONS-QUEUE-EMPTY-P/NO-LOCK))
(SETF (SYSTEM:INLINE-EXPANSION '#1=CONS-QUEUE-EMPTY-P/NO-LOCK) '(LAMBDA (#2=QUEUE) 
(DECLARE (OPTIMIZE (SPEED 3) (SAFETY #3=1) (DEBUG #3# ) (SPACE #4=0) (COMPILATION-SPEED 
#4# ))) (BLOCK #1#  (RAW-QUEUE-EMPTY-P (IMPL #2# )))))
(SYSTEM:FSET 'CONS-QUEUE-EMPTY-P/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
36) 4129 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (CONS-QUEUE) (VALUES BOOLEAN &OPTIONAL)) CONS-QUEUE-EMPTY-P))
(SYSTEM:FSET 'CONS-QUEUE-EMPTY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
37) 4129 '(QUEUE) #1=NIL)
(PROCLAIM '(INLINE PEEK-CONS-QUEUE/NO-LOCK))
(SETF (SYSTEM:INLINE-EXPANSION '#1=PEEK-CONS-QUEUE/NO-LOCK) '(LAMBDA (#2=QUEUE) (DECLARE 
(OPTIMIZE (SPEED 3) (SAFETY #3=1) (DEBUG #3# ) (SPACE #4=0) (COMPILATION-SPEED #4# ))) 
(BLOCK #1#  (PEEK-RAW-QUEUE (IMPL #2# )))))
(SYSTEM:FSET 'PEEK-CONS-QUEUE/NO-LOCK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
38) 4210 '(QUEUE) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION (CONS-QUEUE) (VALUES T BOOLEAN &OPTIONAL)) PEEK-CONS-QUEUE))
(SYSTEM:FSET 'PEEK-CONS-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 39) 
4210 '(QUEUE) #1=NIL)
(SYSTEM:FSET 'MAKE-CONS-QUEUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 40) 
4296 '(&KEY INITIAL-CONTENTS) #1=NIL)
