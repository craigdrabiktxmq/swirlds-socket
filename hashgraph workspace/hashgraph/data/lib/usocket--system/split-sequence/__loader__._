"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Volumes/vibhu/quicklisp/local-projects/usocket-0.6.1/vendor/split-sequence.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:G14868 #:G14869 #:G14891 #:G14892 #:G14914 #:G14915))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.split_sequence_tmpQY3DDDQR"))
(SYSTEM:%IN-PACKAGE "USOCKET")
(SYSTEM:FSET 'SPLIT-SEQUENCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* #1=0) 
2070 '(DELIMITER SEQ &KEY (COUNT #2=NIL) (REMOVE-EMPTY-SUBSEQS #2# ) (FROM-END #2# ) 
(START #1# ) (END #2# ) (TEST #2#  TEST-SUPPLIED) (TEST-NOT #2#  TEST-NOT-SUPPLIED) 
(KEY #2#  KEY-SUPPLIED)) "Return a list of subsequences in seq delimited by delimiter.

If :remove-empty-subseqs is NIL, empty subsequences will be included
in the result; otherwise they will be discarded.  All other keywords
work analogously to those for CL:SUBSTITUTE.  In particular, the
behaviour of :from-end is possibly different from other versions of
this function; :from-end values of NIL and T are equivalent unless
:count is supplied. The second return value is an index suitable as an
argument to CL:SUBSEQ into the sequence indicating where processing
stopped.")
(SYSTEM:FSET 'SPLIT-SEQUENCE-IF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 
4513 '(PREDICATE SEQ &KEY (COUNT #1=NIL) (REMOVE-EMPTY-SUBSEQS #1# ) (FROM-END #1# ) 
(START 0) (END #1# ) (KEY #1#  KEY-SUPPLIED)) "Return a list of subsequences in seq delimited by items satisfying
predicate.

If :remove-empty-subseqs is NIL, empty subsequences will be included
in the result; otherwise they will be discarded.  All other keywords
work analogously to those for CL:SUBSTITUTE-IF.  In particular, the
behaviour of :from-end is possibly different from other versions of
this function; :from-end values of NIL and T are equivalent unless
:count is supplied. The second return value is an index suitable as an
argument to CL:SUBSEQ into the sequence indicating where processing
stopped.")
(SYSTEM:FSET 'SPLIT-SEQUENCE-IF-NOT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
2) 6694 '(PREDICATE SEQ &KEY (COUNT #1=NIL) (REMOVE-EMPTY-SUBSEQS #1# ) (FROM-END 
#1# ) (START 0) (END #1# ) (KEY #1#  KEY-SUPPLIED)) "Return a list of subsequences in seq delimited by items satisfying
(CL:COMPLEMENT predicate).

If :remove-empty-subseqs is NIL, empty subsequences will be included
in the result; otherwise they will be discarded.  All other keywords
work analogously to those for CL:SUBSTITUTE-IF-NOT.  In particular,
the behaviour of :from-end is possibly different from other versions
of this function; :from-end values of NIL and T are equivalent unless
:count is supplied. The second return value is an index suitable as an
argument to CL:SUBSEQ into the sequence indicating where processing
stopped.")
(SYSTEM:FSET 'PARTITION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3) 8900 '(&REST 
ARGS) #1=NIL)
(SYSTEM:FSET 'PARTITION-IF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 4) 8987 
'(&REST ARGS) #1=NIL)
(SYSTEM:FSET 'PARTITION-IF-NOT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5) 
9057 '(&REST ARGS) #1=NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 6))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
